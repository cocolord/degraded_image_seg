2021-01-03 20:35:33,622 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.2, V10.2.89
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.6.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.7.0
OpenCV: 4.4.0
MMCV: 1.2.0
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.2
MMSegmentation: 0.9.0+9f33567
------------------------------------------------------------

2021-01-03 20:35:33,623 - mmseg - INFO - Distributed training: True
2021-01-03 20:35:33,882 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='CascadeEncoderDecoder',
    num_stages=2,
    pretrained='open-mmlab://msra/hrnetv2_w18',
    backbone=dict(
        type='HRNet',
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        extra=dict(
            stage1=dict(
                num_modules=1,
                num_branches=1,
                block='BOTTLENECK',
                num_blocks=(4, ),
                num_channels=(64, )),
            stage2=dict(
                num_modules=1,
                num_branches=2,
                block='BASIC',
                num_blocks=(4, 4),
                num_channels=(18, 36)),
            stage3=dict(
                num_modules=4,
                num_branches=3,
                block='BASIC',
                num_blocks=(4, 4, 4),
                num_channels=(18, 36, 72)),
            stage4=dict(
                num_modules=3,
                num_branches=4,
                block='BASIC',
                num_blocks=(4, 4, 4, 4),
                num_channels=(18, 36, 72, 144)))),
    decode_head=[
        dict(
            type='FCNHead',
            in_channels=[18, 36, 72, 144],
            channels=270,
            in_index=(0, 1, 2, 3),
            input_transform='resize_concat',
            kernel_size=1,
            num_convs=1,
            concat_input=False,
            dropout_ratio=-1,
            num_classes=19,
            norm_cfg=dict(type='SyncBN', requires_grad=True),
            align_corners=False,
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
        dict(
            type='OCRHead',
            in_channels=[18, 36, 72, 144],
            in_index=(0, 1, 2, 3),
            input_transform='resize_concat',
            channels=512,
            ocr_channels=256,
            dropout_ratio=-1,
            num_classes=19,
            norm_cfg=dict(type='SyncBN', requires_grad=True),
            align_corners=False,
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0))
    ])
train_cfg = dict()
test_cfg = dict(mode='whole')
dataset_type = 'CityscapesRainDataset'
data_root = 'data/cityscapes_rain/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 1024)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=3,
    workers_per_gpu=5,
    train=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/train',
        ann_dir='gtFine/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = 'work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft/iter_260000.pth'
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=280000)
checkpoint_config = dict(by_epoch=False, interval=4000)
evaluation = dict(interval=4000, metric='mIoU')
work_dir = './work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft'
gpu_ids = range(0, 1)

2021-01-03 20:35:36,164 - mmseg - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: incre_modules.0.0.conv1.weight, incre_modules.0.0.bn1.weight, incre_modules.0.0.bn1.bias, incre_modules.0.0.bn1.running_mean, incre_modules.0.0.bn1.running_var, incre_modules.0.0.bn1.num_batches_tracked, incre_modules.0.0.conv2.weight, incre_modules.0.0.bn2.weight, incre_modules.0.0.bn2.bias, incre_modules.0.0.bn2.running_mean, incre_modules.0.0.bn2.running_var, incre_modules.0.0.bn2.num_batches_tracked, incre_modules.0.0.conv3.weight, incre_modules.0.0.bn3.weight, incre_modules.0.0.bn3.bias, incre_modules.0.0.bn3.running_mean, incre_modules.0.0.bn3.running_var, incre_modules.0.0.bn3.num_batches_tracked, incre_modules.0.0.downsample.0.weight, incre_modules.0.0.downsample.1.weight, incre_modules.0.0.downsample.1.bias, incre_modules.0.0.downsample.1.running_mean, incre_modules.0.0.downsample.1.running_var, incre_modules.0.0.downsample.1.num_batches_tracked, incre_modules.1.0.conv1.weight, incre_modules.1.0.bn1.weight, incre_modules.1.0.bn1.bias, incre_modules.1.0.bn1.running_mean, incre_modules.1.0.bn1.running_var, incre_modules.1.0.bn1.num_batches_tracked, incre_modules.1.0.conv2.weight, incre_modules.1.0.bn2.weight, incre_modules.1.0.bn2.bias, incre_modules.1.0.bn2.running_mean, incre_modules.1.0.bn2.running_var, incre_modules.1.0.bn2.num_batches_tracked, incre_modules.1.0.conv3.weight, incre_modules.1.0.bn3.weight, incre_modules.1.0.bn3.bias, incre_modules.1.0.bn3.running_mean, incre_modules.1.0.bn3.running_var, incre_modules.1.0.bn3.num_batches_tracked, incre_modules.1.0.downsample.0.weight, incre_modules.1.0.downsample.1.weight, incre_modules.1.0.downsample.1.bias, incre_modules.1.0.downsample.1.running_mean, incre_modules.1.0.downsample.1.running_var, incre_modules.1.0.downsample.1.num_batches_tracked, incre_modules.2.0.conv1.weight, incre_modules.2.0.bn1.weight, incre_modules.2.0.bn1.bias, incre_modules.2.0.bn1.running_mean, incre_modules.2.0.bn1.running_var, incre_modules.2.0.bn1.num_batches_tracked, incre_modules.2.0.conv2.weight, incre_modules.2.0.bn2.weight, incre_modules.2.0.bn2.bias, incre_modules.2.0.bn2.running_mean, incre_modules.2.0.bn2.running_var, incre_modules.2.0.bn2.num_batches_tracked, incre_modules.2.0.conv3.weight, incre_modules.2.0.bn3.weight, incre_modules.2.0.bn3.bias, incre_modules.2.0.bn3.running_mean, incre_modules.2.0.bn3.running_var, incre_modules.2.0.bn3.num_batches_tracked, incre_modules.2.0.downsample.0.weight, incre_modules.2.0.downsample.1.weight, incre_modules.2.0.downsample.1.bias, incre_modules.2.0.downsample.1.running_mean, incre_modules.2.0.downsample.1.running_var, incre_modules.2.0.downsample.1.num_batches_tracked, incre_modules.3.0.conv1.weight, incre_modules.3.0.bn1.weight, incre_modules.3.0.bn1.bias, incre_modules.3.0.bn1.running_mean, incre_modules.3.0.bn1.running_var, incre_modules.3.0.bn1.num_batches_tracked, incre_modules.3.0.conv2.weight, incre_modules.3.0.bn2.weight, incre_modules.3.0.bn2.bias, incre_modules.3.0.bn2.running_mean, incre_modules.3.0.bn2.running_var, incre_modules.3.0.bn2.num_batches_tracked, incre_modules.3.0.conv3.weight, incre_modules.3.0.bn3.weight, incre_modules.3.0.bn3.bias, incre_modules.3.0.bn3.running_mean, incre_modules.3.0.bn3.running_var, incre_modules.3.0.bn3.num_batches_tracked, incre_modules.3.0.downsample.0.weight, incre_modules.3.0.downsample.1.weight, incre_modules.3.0.downsample.1.bias, incre_modules.3.0.downsample.1.running_mean, incre_modules.3.0.downsample.1.running_var, incre_modules.3.0.downsample.1.num_batches_tracked, downsamp_modules.0.0.weight, downsamp_modules.0.0.bias, downsamp_modules.0.1.weight, downsamp_modules.0.1.bias, downsamp_modules.0.1.running_mean, downsamp_modules.0.1.running_var, downsamp_modules.0.1.num_batches_tracked, downsamp_modules.1.0.weight, downsamp_modules.1.0.bias, downsamp_modules.1.1.weight, downsamp_modules.1.1.bias, downsamp_modules.1.1.running_mean, downsamp_modules.1.1.running_var, downsamp_modules.1.1.num_batches_tracked, downsamp_modules.2.0.weight, downsamp_modules.2.0.bias, downsamp_modules.2.1.weight, downsamp_modules.2.1.bias, downsamp_modules.2.1.running_mean, downsamp_modules.2.1.running_var, downsamp_modules.2.1.num_batches_tracked, final_layer.0.weight, final_layer.0.bias, final_layer.1.weight, final_layer.1.bias, final_layer.1.running_mean, final_layer.1.running_var, final_layer.1.num_batches_tracked, classifier.weight, classifier.bias

2021-01-03 20:35:36,167 - mmseg - INFO - CascadeEncoderDecoder(
  (backbone): HRNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (transition1): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(256, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage2): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition2): ModuleList(
      (0): None
      (1): None
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage3): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (3): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition3): ModuleList(
      (0): None
      (1): None
      (2): None
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage4): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleList(
    (0): FCNHead(
      input_transform=resize_concat, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss()
      (conv_seg): Conv2d(270, 19, kernel_size=(1, 1), stride=(1, 1))
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(270, 270, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    (1): OCRHead(
      input_transform=resize_concat, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss()
      (conv_seg): Conv2d(512, 19, kernel_size=(1, 1), stride=(1, 1))
      (object_context_block): ObjectAttentionBlock(
        (key_project): Sequential(
          (0): ConvModule(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (query_project): Sequential(
          (0): ConvModule(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (value_project): ConvModule(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (out_project): ConvModule(
          (conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (bottleneck): ConvModule(
          (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (spatial_gather_module): SpatialGatherModule()
      (bottleneck): ConvModule(
        (conv): Conv2d(270, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
)
2021-01-03 20:35:36,312 - mmseg - INFO - Loaded 262 images
2021-01-03 20:35:36,780 - mmseg - INFO - Loaded 33 images
2021-01-03 20:35:36,780 - mmseg - INFO - load checkpoint from work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft/iter_260000.pth
2021-01-03 20:35:37,347 - mmseg - INFO - resumed from epoch: 243, iter 260000
2021-01-03 20:35:37,350 - mmseg - INFO - Start running, host: gandi@Gandi, work_dir: /home/gandi/Donglusen/workspace/mmsegmentation/work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft
2021-01-03 20:35:37,351 - mmseg - INFO - workflow: [('train', 1)], max: 280000 iters
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
2021-01-03 20:36:19,526 - mmseg - INFO - Iter [260050/280000]	lr: 1.019e-03, eta: 4:39:39, time: 0.841, data_time: 0.177, memory: 7314, decode_0.loss_seg: 0.0310, decode_0.acc_seg: 93.0169, decode_1.loss_seg: 0.0703, decode_1.acc_seg: 93.1167, loss: 0.1013
2021-01-03 20:36:55,984 - mmseg - INFO - Iter [260100/280000]	lr: 1.017e-03, eta: 4:20:23, time: 0.729, data_time: 0.098, memory: 7314, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 92.8394, decode_1.loss_seg: 0.0676, decode_1.acc_seg: 92.9400, loss: 0.0973
2021-01-03 20:37:32,367 - mmseg - INFO - Iter [260150/280000]	lr: 1.015e-03, eta: 4:13:23, time: 0.728, data_time: 0.124, memory: 7314, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 92.9625, decode_1.loss_seg: 0.0688, decode_1.acc_seg: 93.0636, loss: 0.0990
2021-01-03 20:38:11,311 - mmseg - INFO - Iter [260200/280000]	lr: 1.012e-03, eta: 4:13:49, time: 0.779, data_time: 0.144, memory: 7314, decode_0.loss_seg: 0.0313, decode_0.acc_seg: 92.9432, decode_1.loss_seg: 0.0708, decode_1.acc_seg: 93.0613, loss: 0.1021
2021-01-03 20:38:47,093 - mmseg - INFO - Iter [260250/280000]	lr: 1.010e-03, eta: 4:09:39, time: 0.716, data_time: 0.101, memory: 7314, decode_0.loss_seg: 0.0309, decode_0.acc_seg: 93.1406, decode_1.loss_seg: 0.0700, decode_1.acc_seg: 93.2380, loss: 0.1009
2021-01-03 20:39:22,631 - mmseg - INFO - Iter [260300/280000]	lr: 1.008e-03, eta: 4:06:24, time: 0.711, data_time: 0.100, memory: 7314, decode_0.loss_seg: 0.0311, decode_0.acc_seg: 92.9291, decode_1.loss_seg: 0.0706, decode_1.acc_seg: 93.0355, loss: 0.1017
2021-01-03 20:39:58,220 - mmseg - INFO - Iter [260350/280000]	lr: 1.006e-03, eta: 4:03:58, time: 0.712, data_time: 0.112, memory: 7314, decode_0.loss_seg: 0.0309, decode_0.acc_seg: 92.7680, decode_1.loss_seg: 0.0702, decode_1.acc_seg: 92.8802, loss: 0.1011
2021-01-03 20:40:37,143 - mmseg - INFO - Iter [260400/280000]	lr: 1.004e-03, eta: 4:04:43, time: 0.779, data_time: 0.158, memory: 7314, decode_0.loss_seg: 0.0294, decode_0.acc_seg: 93.2662, decode_1.loss_seg: 0.0663, decode_1.acc_seg: 93.3767, loss: 0.0956
2021-01-03 20:41:13,110 - mmseg - INFO - Iter [260450/280000]	lr: 1.002e-03, eta: 4:03:01, time: 0.719, data_time: 0.120, memory: 7314, decode_0.loss_seg: 0.0307, decode_0.acc_seg: 92.8730, decode_1.loss_seg: 0.0695, decode_1.acc_seg: 92.9899, loss: 0.1003
2021-01-03 20:41:49,045 - mmseg - INFO - Iter [260500/280000]	lr: 1.000e-03, eta: 4:01:31, time: 0.719, data_time: 0.117, memory: 7314, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 92.9176, decode_1.loss_seg: 0.0666, decode_1.acc_seg: 93.0242, loss: 0.0961
2021-01-03 20:42:24,851 - mmseg - INFO - Iter [260550/280000]	lr: 9.979e-04, eta: 4:00:06, time: 0.716, data_time: 0.105, memory: 7314, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 92.9944, decode_1.loss_seg: 0.0669, decode_1.acc_seg: 93.1050, loss: 0.0966
2021-01-03 20:43:03,787 - mmseg - INFO - Iter [260600/280000]	lr: 9.958e-04, eta: 4:00:30, time: 0.779, data_time: 0.170, memory: 7314, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 92.7956, decode_1.loss_seg: 0.0676, decode_1.acc_seg: 92.9010, loss: 0.0974
2021-01-03 20:43:39,750 - mmseg - INFO - Iter [260650/280000]	lr: 9.938e-04, eta: 3:59:16, time: 0.719, data_time: 0.106, memory: 7314, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 93.0173, decode_1.loss_seg: 0.0672, decode_1.acc_seg: 93.1201, loss: 0.0968
2021-01-03 20:44:15,674 - mmseg - INFO - Iter [260700/280000]	lr: 9.917e-04, eta: 3:58:07, time: 0.719, data_time: 0.115, memory: 7314, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 93.0471, decode_1.loss_seg: 0.0676, decode_1.acc_seg: 93.1373, loss: 0.0971
2021-01-03 20:44:54,736 - mmseg - INFO - Iter [260750/280000]	lr: 9.896e-04, eta: 3:58:22, time: 0.781, data_time: 0.178, memory: 7314, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 93.1345, decode_1.loss_seg: 0.0678, decode_1.acc_seg: 93.2331, loss: 0.0976
2021-01-03 20:45:30,549 - mmseg - INFO - Iter [260800/280000]	lr: 9.875e-04, eta: 3:57:13, time: 0.716, data_time: 0.099, memory: 7314, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.0898, decode_1.loss_seg: 0.0676, decode_1.acc_seg: 93.1849, loss: 0.0973
2021-01-03 20:46:06,474 - mmseg - INFO - Iter [260850/280000]	lr: 9.855e-04, eta: 3:56:10, time: 0.718, data_time: 0.086, memory: 7314, decode_0.loss_seg: 0.0306, decode_0.acc_seg: 93.1131, decode_1.loss_seg: 0.0697, decode_1.acc_seg: 93.2202, loss: 0.1003
2021-01-03 20:46:42,246 - mmseg - INFO - Iter [260900/280000]	lr: 9.834e-04, eta: 3:55:07, time: 0.715, data_time: 0.117, memory: 7314, decode_0.loss_seg: 0.0304, decode_0.acc_seg: 93.0375, decode_1.loss_seg: 0.0691, decode_1.acc_seg: 93.1371, loss: 0.0996
2021-01-03 20:47:21,364 - mmseg - INFO - Iter [260950/280000]	lr: 9.813e-04, eta: 3:55:14, time: 0.782, data_time: 0.166, memory: 7314, decode_0.loss_seg: 0.0294, decode_0.acc_seg: 92.9513, decode_1.loss_seg: 0.0667, decode_1.acc_seg: 93.0572, loss: 0.0961
2021-01-03 20:47:57,493 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 20:47:57,493 - mmseg - INFO - Iter [261000/280000]	lr: 9.792e-04, eta: 3:54:20, time: 0.722, data_time: 0.114, memory: 7314, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.3792, decode_1.loss_seg: 0.0662, decode_1.acc_seg: 93.4652, loss: 0.0953
2021-01-03 20:48:33,303 - mmseg - INFO - Iter [261050/280000]	lr: 9.771e-04, eta: 3:53:21, time: 0.716, data_time: 0.109, memory: 7314, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 93.0549, decode_1.loss_seg: 0.0669, decode_1.acc_seg: 93.1623, loss: 0.0964
2021-01-03 20:49:09,148 - mmseg - INFO - Iter [261100/280000]	lr: 9.750e-04, eta: 3:52:25, time: 0.717, data_time: 0.100, memory: 7314, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 92.9272, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 93.0225, loss: 0.0957
2021-01-03 20:49:48,313 - mmseg - INFO - Iter [261150/280000]	lr: 9.730e-04, eta: 3:52:26, time: 0.783, data_time: 0.164, memory: 7314, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 92.8218, decode_1.loss_seg: 0.0672, decode_1.acc_seg: 92.9326, loss: 0.0968
2021-01-03 20:50:24,417 - mmseg - INFO - Iter [261200/280000]	lr: 9.709e-04, eta: 3:51:35, time: 0.722, data_time: 0.123, memory: 7314, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 92.8575, decode_1.loss_seg: 0.0680, decode_1.acc_seg: 92.9546, loss: 0.0979
2021-01-03 20:51:00,343 - mmseg - INFO - Iter [261250/280000]	lr: 9.688e-04, eta: 3:50:42, time: 0.719, data_time: 0.118, memory: 7314, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 93.0260, decode_1.loss_seg: 0.0664, decode_1.acc_seg: 93.1311, loss: 0.0956
2021-01-03 20:51:39,122 - mmseg - INFO - Iter [261300/280000]	lr: 9.667e-04, eta: 3:50:32, time: 0.776, data_time: 0.165, memory: 7314, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 92.7959, decode_1.loss_seg: 0.0649, decode_1.acc_seg: 92.8904, loss: 0.0934
2021-01-03 20:52:14,855 - mmseg - INFO - Iter [261350/280000]	lr: 9.646e-04, eta: 3:49:38, time: 0.715, data_time: 0.095, memory: 7314, decode_0.loss_seg: 0.0303, decode_0.acc_seg: 93.0974, decode_1.loss_seg: 0.0687, decode_1.acc_seg: 93.2012, loss: 0.0990
2021-01-03 20:52:50,700 - mmseg - INFO - Iter [261400/280000]	lr: 9.625e-04, eta: 3:48:46, time: 0.717, data_time: 0.106, memory: 7314, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 92.9683, decode_1.loss_seg: 0.0642, decode_1.acc_seg: 93.0574, loss: 0.0924
2021-01-03 20:53:26,525 - mmseg - INFO - Iter [261450/280000]	lr: 9.604e-04, eta: 3:47:56, time: 0.716, data_time: 0.123, memory: 7314, decode_0.loss_seg: 0.0304, decode_0.acc_seg: 92.9306, decode_1.loss_seg: 0.0691, decode_1.acc_seg: 93.0353, loss: 0.0996
2021-01-03 20:54:05,128 - mmseg - INFO - Iter [261500/280000]	lr: 9.584e-04, eta: 3:47:40, time: 0.772, data_time: 0.158, memory: 7314, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 93.3390, decode_1.loss_seg: 0.0662, decode_1.acc_seg: 93.4390, loss: 0.0954
2021-01-03 20:54:41,250 - mmseg - INFO - Iter [261550/280000]	lr: 9.563e-04, eta: 3:46:54, time: 0.723, data_time: 0.101, memory: 7314, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.0744, decode_1.loss_seg: 0.0677, decode_1.acc_seg: 93.1669, loss: 0.0974
2021-01-03 20:55:17,337 - mmseg - INFO - Iter [261600/280000]	lr: 9.542e-04, eta: 3:46:08, time: 0.722, data_time: 0.116, memory: 7314, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 92.8193, decode_1.loss_seg: 0.0664, decode_1.acc_seg: 92.9116, loss: 0.0957
2021-01-03 20:55:52,993 - mmseg - INFO - Iter [261650/280000]	lr: 9.521e-04, eta: 3:45:17, time: 0.713, data_time: 0.120, memory: 7314, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 93.1990, decode_1.loss_seg: 0.0679, decode_1.acc_seg: 93.2974, loss: 0.0978
2021-01-03 20:56:32,179 - mmseg - INFO - Iter [261700/280000]	lr: 9.500e-04, eta: 3:45:06, time: 0.784, data_time: 0.146, memory: 7314, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 93.6201, decode_1.loss_seg: 0.0652, decode_1.acc_seg: 93.7145, loss: 0.0940
2021-01-03 20:57:08,274 - mmseg - INFO - Iter [261750/280000]	lr: 9.479e-04, eta: 3:44:21, time: 0.722, data_time: 0.100, memory: 7314, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 92.5272, decode_1.loss_seg: 0.0662, decode_1.acc_seg: 92.6304, loss: 0.0954
2021-01-03 20:57:44,229 - mmseg - INFO - Iter [261800/280000]	lr: 9.458e-04, eta: 3:43:34, time: 0.719, data_time: 0.111, memory: 7314, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.1928, decode_1.loss_seg: 0.0641, decode_1.acc_seg: 93.2930, loss: 0.0924
2021-01-03 20:58:23,257 - mmseg - INFO - Iter [261850/280000]	lr: 9.437e-04, eta: 3:43:19, time: 0.780, data_time: 0.159, memory: 7314, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 93.0265, decode_1.loss_seg: 0.0669, decode_1.acc_seg: 93.1355, loss: 0.0965
2021-01-03 20:58:59,316 - mmseg - INFO - Iter [261900/280000]	lr: 9.416e-04, eta: 3:42:34, time: 0.721, data_time: 0.094, memory: 7314, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 93.0818, decode_1.loss_seg: 0.0654, decode_1.acc_seg: 93.1831, loss: 0.0942
2021-01-03 20:59:35,455 - mmseg - INFO - Iter [261950/280000]	lr: 9.395e-04, eta: 3:41:50, time: 0.723, data_time: 0.117, memory: 7314, decode_0.loss_seg: 0.0294, decode_0.acc_seg: 92.7894, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 92.8870, loss: 0.0959
2021-01-03 21:00:10,917 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 21:00:10,918 - mmseg - INFO - Iter [262000/280000]	lr: 9.375e-04, eta: 3:41:00, time: 0.709, data_time: 0.108, memory: 7314, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 93.8229, decode_1.loss_seg: 0.0631, decode_1.acc_seg: 93.9233, loss: 0.0911
2021-01-03 21:00:49,825 - mmseg - INFO - Iter [262050/280000]	lr: 9.354e-04, eta: 3:40:42, time: 0.778, data_time: 0.149, memory: 7314, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.1446, decode_1.loss_seg: 0.0648, decode_1.acc_seg: 93.2441, loss: 0.0933
2021-01-03 21:01:25,986 - mmseg - INFO - Iter [262100/280000]	lr: 9.333e-04, eta: 3:39:59, time: 0.723, data_time: 0.100, memory: 7314, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 92.9884, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 93.0868, loss: 0.0971
2021-01-03 21:02:01,955 - mmseg - INFO - Iter [262150/280000]	lr: 9.312e-04, eta: 3:39:14, time: 0.719, data_time: 0.101, memory: 7314, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 93.1769, decode_1.loss_seg: 0.0681, decode_1.acc_seg: 93.2791, loss: 0.0981
2021-01-03 21:02:37,786 - mmseg - INFO - Iter [262200/280000]	lr: 9.291e-04, eta: 3:38:29, time: 0.717, data_time: 0.104, memory: 7314, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 93.0789, decode_1.loss_seg: 0.0656, decode_1.acc_seg: 93.1707, loss: 0.0944
2021-01-03 21:03:16,523 - mmseg - INFO - Iter [262250/280000]	lr: 9.270e-04, eta: 3:38:07, time: 0.775, data_time: 0.150, memory: 7314, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 93.3434, decode_1.loss_seg: 0.0681, decode_1.acc_seg: 93.4378, loss: 0.0979
2021-01-03 21:03:52,553 - mmseg - INFO - Iter [262300/280000]	lr: 9.249e-04, eta: 3:37:24, time: 0.721, data_time: 0.106, memory: 7314, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 92.6688, decode_1.loss_seg: 0.0664, decode_1.acc_seg: 92.7691, loss: 0.0957
2021-01-03 21:04:28,065 - mmseg - INFO - Iter [262350/280000]	lr: 9.228e-04, eta: 3:36:37, time: 0.710, data_time: 0.104, memory: 7314, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 93.0273, decode_1.loss_seg: 0.0669, decode_1.acc_seg: 93.1269, loss: 0.0965
2021-01-03 21:05:07,051 - mmseg - INFO - Iter [262400/280000]	lr: 9.207e-04, eta: 3:36:16, time: 0.780, data_time: 0.169, memory: 7314, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.0483, decode_1.loss_seg: 0.0641, decode_1.acc_seg: 93.1517, loss: 0.0925
2021-01-03 21:05:43,186 - mmseg - INFO - Iter [262450/280000]	lr: 9.186e-04, eta: 3:35:34, time: 0.723, data_time: 0.108, memory: 7314, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 93.5350, decode_1.loss_seg: 0.0657, decode_1.acc_seg: 93.6424, loss: 0.0947
2021-01-03 21:06:19,160 - mmseg - INFO - Iter [262500/280000]	lr: 9.165e-04, eta: 3:34:51, time: 0.720, data_time: 0.094, memory: 7314, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 93.1375, decode_1.loss_seg: 0.0659, decode_1.acc_seg: 93.2297, loss: 0.0949
2021-01-03 21:06:55,061 - mmseg - INFO - Iter [262550/280000]	lr: 9.144e-04, eta: 3:34:08, time: 0.718, data_time: 0.094, memory: 7314, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 92.9236, decode_1.loss_seg: 0.0648, decode_1.acc_seg: 93.0182, loss: 0.0935
2021-01-03 21:07:34,344 - mmseg - INFO - Iter [262600/280000]	lr: 9.123e-04, eta: 3:33:48, time: 0.786, data_time: 0.157, memory: 7314, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.4059, decode_1.loss_seg: 0.0673, decode_1.acc_seg: 93.5040, loss: 0.0969
2021-01-03 21:08:10,323 - mmseg - INFO - Iter [262650/280000]	lr: 9.102e-04, eta: 3:33:05, time: 0.719, data_time: 0.113, memory: 7314, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.2744, decode_1.loss_seg: 0.0645, decode_1.acc_seg: 93.3755, loss: 0.0930
2021-01-03 21:08:46,332 - mmseg - INFO - Iter [262700/280000]	lr: 9.081e-04, eta: 3:32:23, time: 0.720, data_time: 0.110, memory: 7314, decode_0.loss_seg: 0.0286, decode_0.acc_seg: 93.1602, decode_1.loss_seg: 0.0649, decode_1.acc_seg: 93.2586, loss: 0.0936
2021-01-03 21:09:22,371 - mmseg - INFO - Iter [262750/280000]	lr: 9.060e-04, eta: 3:31:41, time: 0.721, data_time: 0.123, memory: 7314, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 92.7509, decode_1.loss_seg: 0.0648, decode_1.acc_seg: 92.8630, loss: 0.0935
2021-01-03 21:10:01,444 - mmseg - INFO - Iter [262800/280000]	lr: 9.039e-04, eta: 3:31:18, time: 0.781, data_time: 0.172, memory: 7314, decode_0.loss_seg: 0.0294, decode_0.acc_seg: 93.2486, decode_1.loss_seg: 0.0667, decode_1.acc_seg: 93.3519, loss: 0.0961
2021-01-03 21:10:37,600 - mmseg - INFO - Iter [262850/280000]	lr: 9.018e-04, eta: 3:30:37, time: 0.723, data_time: 0.104, memory: 7314, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 93.1205, decode_1.loss_seg: 0.0655, decode_1.acc_seg: 93.2167, loss: 0.0944
2021-01-03 21:11:13,663 - mmseg - INFO - Iter [262900/280000]	lr: 8.997e-04, eta: 3:29:55, time: 0.721, data_time: 0.099, memory: 7314, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.2343, decode_1.loss_seg: 0.0659, decode_1.acc_seg: 93.3384, loss: 0.0950
2021-01-03 21:11:52,916 - mmseg - INFO - Iter [262950/280000]	lr: 8.976e-04, eta: 3:29:33, time: 0.785, data_time: 0.162, memory: 7314, decode_0.loss_seg: 0.0303, decode_0.acc_seg: 92.8246, decode_1.loss_seg: 0.0690, decode_1.acc_seg: 92.9298, loss: 0.0993
2021-01-03 21:12:28,960 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 21:12:28,961 - mmseg - INFO - Iter [263000/280000]	lr: 8.955e-04, eta: 3:28:51, time: 0.721, data_time: 0.107, memory: 7314, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 93.3796, decode_1.loss_seg: 0.0655, decode_1.acc_seg: 93.4820, loss: 0.0943
2021-01-03 21:13:04,707 - mmseg - INFO - Iter [263050/280000]	lr: 8.934e-04, eta: 3:28:08, time: 0.715, data_time: 0.109, memory: 7314, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 93.1486, decode_1.loss_seg: 0.0668, decode_1.acc_seg: 93.2476, loss: 0.0963
2021-01-03 21:13:40,586 - mmseg - INFO - Iter [263100/280000]	lr: 8.913e-04, eta: 3:27:26, time: 0.718, data_time: 0.107, memory: 7314, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 92.9894, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 93.0837, loss: 0.0921
2021-01-03 21:14:19,562 - mmseg - INFO - Iter [263150/280000]	lr: 8.891e-04, eta: 3:27:01, time: 0.780, data_time: 0.160, memory: 7314, decode_0.loss_seg: 0.0301, decode_0.acc_seg: 92.8451, decode_1.loss_seg: 0.0682, decode_1.acc_seg: 92.9384, loss: 0.0984
2021-01-03 21:14:55,745 - mmseg - INFO - Iter [263200/280000]	lr: 8.870e-04, eta: 3:26:20, time: 0.724, data_time: 0.122, memory: 7314, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.3166, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 93.4182, loss: 0.0923
2021-01-03 21:15:31,655 - mmseg - INFO - Iter [263250/280000]	lr: 8.849e-04, eta: 3:25:39, time: 0.718, data_time: 0.103, memory: 7314, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.2617, decode_1.loss_seg: 0.0643, decode_1.acc_seg: 93.3622, loss: 0.0928
2021-01-03 21:16:07,393 - mmseg - INFO - Iter [263300/280000]	lr: 8.828e-04, eta: 3:24:56, time: 0.715, data_time: 0.095, memory: 7314, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 93.0587, decode_1.loss_seg: 0.0628, decode_1.acc_seg: 93.1531, loss: 0.0904
2021-01-03 21:16:46,802 - mmseg - INFO - Iter [263350/280000]	lr: 8.807e-04, eta: 3:24:32, time: 0.788, data_time: 0.151, memory: 7314, decode_0.loss_seg: 0.0286, decode_0.acc_seg: 92.9832, decode_1.loss_seg: 0.0649, decode_1.acc_seg: 93.0778, loss: 0.0935
2021-01-03 21:17:22,695 - mmseg - INFO - Iter [263400/280000]	lr: 8.786e-04, eta: 3:23:51, time: 0.718, data_time: 0.102, memory: 7314, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.0278, decode_1.loss_seg: 0.0642, decode_1.acc_seg: 93.1282, loss: 0.0925
2021-01-03 21:17:58,700 - mmseg - INFO - Iter [263450/280000]	lr: 8.765e-04, eta: 3:23:10, time: 0.720, data_time: 0.108, memory: 7314, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.1018, decode_1.loss_seg: 0.0642, decode_1.acc_seg: 93.1968, loss: 0.0925
2021-01-03 21:18:37,668 - mmseg - INFO - Iter [263500/280000]	lr: 8.744e-04, eta: 3:22:43, time: 0.779, data_time: 0.165, memory: 7314, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 93.0636, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 93.1579, loss: 0.0922
2021-01-03 21:19:13,623 - mmseg - INFO - Iter [263550/280000]	lr: 8.723e-04, eta: 3:22:02, time: 0.719, data_time: 0.109, memory: 7314, decode_0.loss_seg: 0.0286, decode_0.acc_seg: 92.9041, decode_1.loss_seg: 0.0651, decode_1.acc_seg: 92.9973, loss: 0.0936
2021-01-03 21:19:49,659 - mmseg - INFO - Iter [263600/280000]	lr: 8.702e-04, eta: 3:21:22, time: 0.721, data_time: 0.109, memory: 7314, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.0304, decode_1.loss_seg: 0.0644, decode_1.acc_seg: 93.1372, loss: 0.0929
2021-01-03 21:20:25,242 - mmseg - INFO - Iter [263650/280000]	lr: 8.680e-04, eta: 3:20:39, time: 0.712, data_time: 0.106, memory: 7314, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 93.3242, decode_1.loss_seg: 0.0650, decode_1.acc_seg: 93.4221, loss: 0.0938
2021-01-03 21:21:04,280 - mmseg - INFO - Iter [263700/280000]	lr: 8.659e-04, eta: 3:20:12, time: 0.781, data_time: 0.153, memory: 7314, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 93.3437, decode_1.loss_seg: 0.0654, decode_1.acc_seg: 93.4477, loss: 0.0942
2021-01-03 21:21:40,154 - mmseg - INFO - Iter [263750/280000]	lr: 8.638e-04, eta: 3:19:31, time: 0.717, data_time: 0.108, memory: 7314, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 92.6895, decode_1.loss_seg: 0.0645, decode_1.acc_seg: 92.7840, loss: 0.0929
2021-01-03 21:22:16,151 - mmseg - INFO - Iter [263800/280000]	lr: 8.617e-04, eta: 3:18:51, time: 0.720, data_time: 0.119, memory: 7314, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.2612, decode_1.loss_seg: 0.0634, decode_1.acc_seg: 93.3596, loss: 0.0915
2021-01-03 21:22:51,873 - mmseg - INFO - Iter [263850/280000]	lr: 8.596e-04, eta: 3:18:09, time: 0.714, data_time: 0.104, memory: 7314, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.1072, decode_1.loss_seg: 0.0649, decode_1.acc_seg: 93.1974, loss: 0.0934
2021-01-03 21:23:31,138 - mmseg - INFO - Iter [263900/280000]	lr: 8.575e-04, eta: 3:17:42, time: 0.785, data_time: 0.142, memory: 7314, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 93.4563, decode_1.loss_seg: 0.0643, decode_1.acc_seg: 93.5590, loss: 0.0927
2021-01-03 21:24:07,240 - mmseg - INFO - Iter [263950/280000]	lr: 8.553e-04, eta: 3:17:03, time: 0.722, data_time: 0.091, memory: 7314, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 93.1872, decode_1.loss_seg: 0.0641, decode_1.acc_seg: 93.2821, loss: 0.0925
2021-01-03 21:34:31,295 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.2, V10.2.89
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.6.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.7.0
OpenCV: 4.4.0
MMCV: 1.2.0
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.2
MMSegmentation: 0.9.0+9f33567
------------------------------------------------------------

2021-01-03 21:34:31,295 - mmseg - INFO - Distributed training: True
2021-01-03 21:34:31,540 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='CascadeEncoderDecoder',
    num_stages=2,
    pretrained='open-mmlab://msra/hrnetv2_w18',
    backbone=dict(
        type='HRNet',
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        extra=dict(
            stage1=dict(
                num_modules=1,
                num_branches=1,
                block='BOTTLENECK',
                num_blocks=(4, ),
                num_channels=(64, )),
            stage2=dict(
                num_modules=1,
                num_branches=2,
                block='BASIC',
                num_blocks=(4, 4),
                num_channels=(18, 36)),
            stage3=dict(
                num_modules=4,
                num_branches=3,
                block='BASIC',
                num_blocks=(4, 4, 4),
                num_channels=(18, 36, 72)),
            stage4=dict(
                num_modules=3,
                num_branches=4,
                block='BASIC',
                num_blocks=(4, 4, 4, 4),
                num_channels=(18, 36, 72, 144)))),
    decode_head=[
        dict(
            type='FCNHead',
            in_channels=[18, 36, 72, 144],
            channels=270,
            in_index=(0, 1, 2, 3),
            input_transform='resize_concat',
            kernel_size=1,
            num_convs=1,
            concat_input=False,
            dropout_ratio=-1,
            num_classes=19,
            norm_cfg=dict(type='SyncBN', requires_grad=True),
            align_corners=False,
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
        dict(
            type='OCRHead',
            in_channels=[18, 36, 72, 144],
            in_index=(0, 1, 2, 3),
            input_transform='resize_concat',
            channels=512,
            ocr_channels=256,
            dropout_ratio=-1,
            num_classes=19,
            norm_cfg=dict(type='SyncBN', requires_grad=True),
            align_corners=False,
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0))
    ])
train_cfg = dict()
test_cfg = dict(mode='whole')
dataset_type = 'CityscapesRainDataset'
data_root = 'data/cityscapes_rain/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 1024)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=3,
    workers_per_gpu=5,
    train=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/train',
        ann_dir='gtFine/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = 'work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft/iter_260000.pth'
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=280000)
checkpoint_config = dict(by_epoch=False, interval=4000)
evaluation = dict(interval=4000, metric='mIoU')
work_dir = './work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft'
gpu_ids = range(0, 1)

2021-01-03 21:34:34,005 - mmseg - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: incre_modules.0.0.conv1.weight, incre_modules.0.0.bn1.weight, incre_modules.0.0.bn1.bias, incre_modules.0.0.bn1.running_mean, incre_modules.0.0.bn1.running_var, incre_modules.0.0.bn1.num_batches_tracked, incre_modules.0.0.conv2.weight, incre_modules.0.0.bn2.weight, incre_modules.0.0.bn2.bias, incre_modules.0.0.bn2.running_mean, incre_modules.0.0.bn2.running_var, incre_modules.0.0.bn2.num_batches_tracked, incre_modules.0.0.conv3.weight, incre_modules.0.0.bn3.weight, incre_modules.0.0.bn3.bias, incre_modules.0.0.bn3.running_mean, incre_modules.0.0.bn3.running_var, incre_modules.0.0.bn3.num_batches_tracked, incre_modules.0.0.downsample.0.weight, incre_modules.0.0.downsample.1.weight, incre_modules.0.0.downsample.1.bias, incre_modules.0.0.downsample.1.running_mean, incre_modules.0.0.downsample.1.running_var, incre_modules.0.0.downsample.1.num_batches_tracked, incre_modules.1.0.conv1.weight, incre_modules.1.0.bn1.weight, incre_modules.1.0.bn1.bias, incre_modules.1.0.bn1.running_mean, incre_modules.1.0.bn1.running_var, incre_modules.1.0.bn1.num_batches_tracked, incre_modules.1.0.conv2.weight, incre_modules.1.0.bn2.weight, incre_modules.1.0.bn2.bias, incre_modules.1.0.bn2.running_mean, incre_modules.1.0.bn2.running_var, incre_modules.1.0.bn2.num_batches_tracked, incre_modules.1.0.conv3.weight, incre_modules.1.0.bn3.weight, incre_modules.1.0.bn3.bias, incre_modules.1.0.bn3.running_mean, incre_modules.1.0.bn3.running_var, incre_modules.1.0.bn3.num_batches_tracked, incre_modules.1.0.downsample.0.weight, incre_modules.1.0.downsample.1.weight, incre_modules.1.0.downsample.1.bias, incre_modules.1.0.downsample.1.running_mean, incre_modules.1.0.downsample.1.running_var, incre_modules.1.0.downsample.1.num_batches_tracked, incre_modules.2.0.conv1.weight, incre_modules.2.0.bn1.weight, incre_modules.2.0.bn1.bias, incre_modules.2.0.bn1.running_mean, incre_modules.2.0.bn1.running_var, incre_modules.2.0.bn1.num_batches_tracked, incre_modules.2.0.conv2.weight, incre_modules.2.0.bn2.weight, incre_modules.2.0.bn2.bias, incre_modules.2.0.bn2.running_mean, incre_modules.2.0.bn2.running_var, incre_modules.2.0.bn2.num_batches_tracked, incre_modules.2.0.conv3.weight, incre_modules.2.0.bn3.weight, incre_modules.2.0.bn3.bias, incre_modules.2.0.bn3.running_mean, incre_modules.2.0.bn3.running_var, incre_modules.2.0.bn3.num_batches_tracked, incre_modules.2.0.downsample.0.weight, incre_modules.2.0.downsample.1.weight, incre_modules.2.0.downsample.1.bias, incre_modules.2.0.downsample.1.running_mean, incre_modules.2.0.downsample.1.running_var, incre_modules.2.0.downsample.1.num_batches_tracked, incre_modules.3.0.conv1.weight, incre_modules.3.0.bn1.weight, incre_modules.3.0.bn1.bias, incre_modules.3.0.bn1.running_mean, incre_modules.3.0.bn1.running_var, incre_modules.3.0.bn1.num_batches_tracked, incre_modules.3.0.conv2.weight, incre_modules.3.0.bn2.weight, incre_modules.3.0.bn2.bias, incre_modules.3.0.bn2.running_mean, incre_modules.3.0.bn2.running_var, incre_modules.3.0.bn2.num_batches_tracked, incre_modules.3.0.conv3.weight, incre_modules.3.0.bn3.weight, incre_modules.3.0.bn3.bias, incre_modules.3.0.bn3.running_mean, incre_modules.3.0.bn3.running_var, incre_modules.3.0.bn3.num_batches_tracked, incre_modules.3.0.downsample.0.weight, incre_modules.3.0.downsample.1.weight, incre_modules.3.0.downsample.1.bias, incre_modules.3.0.downsample.1.running_mean, incre_modules.3.0.downsample.1.running_var, incre_modules.3.0.downsample.1.num_batches_tracked, downsamp_modules.0.0.weight, downsamp_modules.0.0.bias, downsamp_modules.0.1.weight, downsamp_modules.0.1.bias, downsamp_modules.0.1.running_mean, downsamp_modules.0.1.running_var, downsamp_modules.0.1.num_batches_tracked, downsamp_modules.1.0.weight, downsamp_modules.1.0.bias, downsamp_modules.1.1.weight, downsamp_modules.1.1.bias, downsamp_modules.1.1.running_mean, downsamp_modules.1.1.running_var, downsamp_modules.1.1.num_batches_tracked, downsamp_modules.2.0.weight, downsamp_modules.2.0.bias, downsamp_modules.2.1.weight, downsamp_modules.2.1.bias, downsamp_modules.2.1.running_mean, downsamp_modules.2.1.running_var, downsamp_modules.2.1.num_batches_tracked, final_layer.0.weight, final_layer.0.bias, final_layer.1.weight, final_layer.1.bias, final_layer.1.running_mean, final_layer.1.running_var, final_layer.1.num_batches_tracked, classifier.weight, classifier.bias

2021-01-03 21:34:34,008 - mmseg - INFO - CascadeEncoderDecoder(
  (backbone): HRNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (transition1): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(256, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage2): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition2): ModuleList(
      (0): None
      (1): None
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage3): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (3): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition3): ModuleList(
      (0): None
      (1): None
      (2): None
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage4): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleList(
    (0): FCNHead(
      input_transform=resize_concat, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss()
      (conv_seg): Conv2d(270, 19, kernel_size=(1, 1), stride=(1, 1))
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(270, 270, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    (1): OCRHead(
      input_transform=resize_concat, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss()
      (conv_seg): Conv2d(512, 19, kernel_size=(1, 1), stride=(1, 1))
      (object_context_block): ObjectAttentionBlock(
        (key_project): Sequential(
          (0): ConvModule(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (query_project): Sequential(
          (0): ConvModule(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (value_project): ConvModule(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (out_project): ConvModule(
          (conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (bottleneck): ConvModule(
          (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (spatial_gather_module): SpatialGatherModule()
      (bottleneck): ConvModule(
        (conv): Conv2d(270, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
)
2021-01-03 21:34:34,197 - mmseg - INFO - Loaded 262 images
2021-01-03 21:34:34,614 - mmseg - INFO - Loaded 33 images
2021-01-03 21:34:34,614 - mmseg - INFO - load checkpoint from work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft/iter_260000.pth
2021-01-03 21:34:35,174 - mmseg - INFO - resumed from epoch: 243, iter 260000
2021-01-03 21:34:35,177 - mmseg - INFO - Start running, host: gandi@Gandi, work_dir: /home/gandi/Donglusen/workspace/mmsegmentation/work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft
2021-01-03 21:34:35,177 - mmseg - INFO - workflow: [('train', 1)], max: 280000 iters
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
2021-01-03 21:35:17,021 - mmseg - INFO - Iter [260050/280000]	lr: 1.019e-03, eta: 4:37:31, time: 0.835, data_time: 0.170, memory: 7314, decode_0.loss_seg: 0.0309, decode_0.acc_seg: 93.4367, decode_1.loss_seg: 0.0703, decode_1.acc_seg: 93.5271, loss: 0.1012
2021-01-03 21:35:53,237 - mmseg - INFO - Iter [260100/280000]	lr: 1.017e-03, eta: 4:18:30, time: 0.724, data_time: 0.104, memory: 7314, decode_0.loss_seg: 0.0310, decode_0.acc_seg: 93.1550, decode_1.loss_seg: 0.0703, decode_1.acc_seg: 93.2685, loss: 0.1013
2021-01-03 21:36:28,918 - mmseg - INFO - Iter [260150/280000]	lr: 1.015e-03, eta: 4:10:36, time: 0.714, data_time: 0.098, memory: 7314, decode_0.loss_seg: 0.0306, decode_0.acc_seg: 93.0643, decode_1.loss_seg: 0.0699, decode_1.acc_seg: 93.1601, loss: 0.1005
2021-01-03 21:37:07,571 - mmseg - INFO - Iter [260200/280000]	lr: 1.012e-03, eta: 4:11:15, time: 0.773, data_time: 0.162, memory: 7314, decode_0.loss_seg: 0.0307, decode_0.acc_seg: 93.1024, decode_1.loss_seg: 0.0693, decode_1.acc_seg: 93.2189, loss: 0.0999
2021-01-03 21:37:43,365 - mmseg - INFO - Iter [260250/280000]	lr: 1.010e-03, eta: 4:07:37, time: 0.716, data_time: 0.105, memory: 7314, decode_0.loss_seg: 0.0307, decode_0.acc_seg: 93.6077, decode_1.loss_seg: 0.0698, decode_1.acc_seg: 93.7137, loss: 0.1005
2021-01-03 21:38:18,986 - mmseg - INFO - Iter [260300/280000]	lr: 1.008e-03, eta: 4:04:49, time: 0.712, data_time: 0.102, memory: 7314, decode_0.loss_seg: 0.0311, decode_0.acc_seg: 92.4272, decode_1.loss_seg: 0.0703, decode_1.acc_seg: 92.5474, loss: 0.1014
2021-01-03 21:38:54,721 - mmseg - INFO - Iter [260350/280000]	lr: 1.006e-03, eta: 4:02:45, time: 0.715, data_time: 0.103, memory: 7314, decode_0.loss_seg: 0.0307, decode_0.acc_seg: 92.7617, decode_1.loss_seg: 0.0698, decode_1.acc_seg: 92.8704, loss: 0.1005
2021-01-03 21:39:33,428 - mmseg - INFO - Iter [260400/280000]	lr: 1.004e-03, eta: 4:03:28, time: 0.774, data_time: 0.144, memory: 7314, decode_0.loss_seg: 0.0312, decode_0.acc_seg: 92.9944, decode_1.loss_seg: 0.0709, decode_1.acc_seg: 93.1006, loss: 0.1021
2021-01-03 21:40:09,350 - mmseg - INFO - Iter [260450/280000]	lr: 1.002e-03, eta: 4:01:52, time: 0.718, data_time: 0.111, memory: 7314, decode_0.loss_seg: 0.0307, decode_0.acc_seg: 92.9054, decode_1.loss_seg: 0.0697, decode_1.acc_seg: 93.0067, loss: 0.1004
2021-01-03 21:40:45,189 - mmseg - INFO - Iter [260500/280000]	lr: 1.000e-03, eta: 4:00:26, time: 0.717, data_time: 0.113, memory: 7314, decode_0.loss_seg: 0.0303, decode_0.acc_seg: 92.9548, decode_1.loss_seg: 0.0690, decode_1.acc_seg: 93.0547, loss: 0.0993
2021-01-03 21:41:20,978 - mmseg - INFO - Iter [260550/280000]	lr: 9.979e-04, eta: 3:59:06, time: 0.716, data_time: 0.105, memory: 7314, decode_0.loss_seg: 0.0301, decode_0.acc_seg: 93.1047, decode_1.loss_seg: 0.0684, decode_1.acc_seg: 93.2092, loss: 0.0985
2021-01-03 21:41:59,814 - mmseg - INFO - Iter [260600/280000]	lr: 9.958e-04, eta: 3:59:32, time: 0.777, data_time: 0.141, memory: 7314, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.0948, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 93.2011, loss: 0.0971
2021-01-03 21:42:35,584 - mmseg - INFO - Iter [260650/280000]	lr: 9.938e-04, eta: 3:58:17, time: 0.716, data_time: 0.088, memory: 7314, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 92.9232, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 93.0178, loss: 0.0969
2021-01-03 21:43:11,444 - mmseg - INFO - Iter [260700/280000]	lr: 9.917e-04, eta: 3:57:10, time: 0.717, data_time: 0.102, memory: 7314, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 93.2572, decode_1.loss_seg: 0.0687, decode_1.acc_seg: 93.3575, loss: 0.0989
2021-01-03 21:43:50,266 - mmseg - INFO - Iter [260750/280000]	lr: 9.896e-04, eta: 3:57:24, time: 0.776, data_time: 0.143, memory: 7314, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 92.7830, decode_1.loss_seg: 0.0673, decode_1.acc_seg: 92.8811, loss: 0.0969
2021-01-03 21:44:26,167 - mmseg - INFO - Iter [260800/280000]	lr: 9.875e-04, eta: 3:56:20, time: 0.718, data_time: 0.094, memory: 7314, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.1019, decode_1.loss_seg: 0.0660, decode_1.acc_seg: 93.1963, loss: 0.0950
2021-01-03 21:45:02,159 - mmseg - INFO - Iter [260850/280000]	lr: 9.855e-04, eta: 3:55:22, time: 0.720, data_time: 0.105, memory: 7314, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 93.2053, decode_1.loss_seg: 0.0671, decode_1.acc_seg: 93.3082, loss: 0.0967
2021-01-03 21:45:37,785 - mmseg - INFO - Iter [260900/280000]	lr: 9.834e-04, eta: 3:54:19, time: 0.712, data_time: 0.104, memory: 7314, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 92.8489, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 92.9581, loss: 0.0973
2021-01-03 21:56:10,403 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.2, V10.2.89
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.6.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.7.0
OpenCV: 4.4.0
MMCV: 1.2.0
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.2
MMSegmentation: 0.9.0+9f33567
------------------------------------------------------------

2021-01-03 21:56:10,404 - mmseg - INFO - Distributed training: True
2021-01-03 21:56:10,653 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='CascadeEncoderDecoder',
    num_stages=2,
    pretrained='open-mmlab://msra/hrnetv2_w18',
    backbone=dict(
        type='HRNet',
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        extra=dict(
            stage1=dict(
                num_modules=1,
                num_branches=1,
                block='BOTTLENECK',
                num_blocks=(4, ),
                num_channels=(64, )),
            stage2=dict(
                num_modules=1,
                num_branches=2,
                block='BASIC',
                num_blocks=(4, 4),
                num_channels=(18, 36)),
            stage3=dict(
                num_modules=4,
                num_branches=3,
                block='BASIC',
                num_blocks=(4, 4, 4),
                num_channels=(18, 36, 72)),
            stage4=dict(
                num_modules=3,
                num_branches=4,
                block='BASIC',
                num_blocks=(4, 4, 4, 4),
                num_channels=(18, 36, 72, 144)))),
    decode_head=[
        dict(
            type='FCNHead',
            in_channels=[18, 36, 72, 144],
            channels=270,
            in_index=(0, 1, 2, 3),
            input_transform='resize_concat',
            kernel_size=1,
            num_convs=1,
            concat_input=False,
            dropout_ratio=-1,
            num_classes=19,
            norm_cfg=dict(type='SyncBN', requires_grad=True),
            align_corners=False,
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
        dict(
            type='OCRHead',
            in_channels=[18, 36, 72, 144],
            in_index=(0, 1, 2, 3),
            input_transform='resize_concat',
            channels=512,
            ocr_channels=256,
            dropout_ratio=-1,
            num_classes=19,
            norm_cfg=dict(type='SyncBN', requires_grad=True),
            align_corners=False,
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0))
    ])
train_cfg = dict()
test_cfg = dict(mode='whole')
dataset_type = 'CityscapesRainDataset'
data_root = 'data/cityscapes_rain/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 1024)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=3,
    workers_per_gpu=5,
    train=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/train',
        ann_dir='gtFine/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CityscapesRainDataset',
        data_root='data/cityscapes_rain/',
        img_dir='leftImg8bit_rain/val',
        ann_dir='gtFine/val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = 'work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft/iter_260000.pth'
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=280000)
checkpoint_config = dict(by_epoch=False, interval=4000)
evaluation = dict(interval=4000, metric='mIoU')
work_dir = './work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft'
gpu_ids = range(0, 1)

2021-01-03 21:56:13,100 - mmseg - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: incre_modules.0.0.conv1.weight, incre_modules.0.0.bn1.weight, incre_modules.0.0.bn1.bias, incre_modules.0.0.bn1.running_mean, incre_modules.0.0.bn1.running_var, incre_modules.0.0.bn1.num_batches_tracked, incre_modules.0.0.conv2.weight, incre_modules.0.0.bn2.weight, incre_modules.0.0.bn2.bias, incre_modules.0.0.bn2.running_mean, incre_modules.0.0.bn2.running_var, incre_modules.0.0.bn2.num_batches_tracked, incre_modules.0.0.conv3.weight, incre_modules.0.0.bn3.weight, incre_modules.0.0.bn3.bias, incre_modules.0.0.bn3.running_mean, incre_modules.0.0.bn3.running_var, incre_modules.0.0.bn3.num_batches_tracked, incre_modules.0.0.downsample.0.weight, incre_modules.0.0.downsample.1.weight, incre_modules.0.0.downsample.1.bias, incre_modules.0.0.downsample.1.running_mean, incre_modules.0.0.downsample.1.running_var, incre_modules.0.0.downsample.1.num_batches_tracked, incre_modules.1.0.conv1.weight, incre_modules.1.0.bn1.weight, incre_modules.1.0.bn1.bias, incre_modules.1.0.bn1.running_mean, incre_modules.1.0.bn1.running_var, incre_modules.1.0.bn1.num_batches_tracked, incre_modules.1.0.conv2.weight, incre_modules.1.0.bn2.weight, incre_modules.1.0.bn2.bias, incre_modules.1.0.bn2.running_mean, incre_modules.1.0.bn2.running_var, incre_modules.1.0.bn2.num_batches_tracked, incre_modules.1.0.conv3.weight, incre_modules.1.0.bn3.weight, incre_modules.1.0.bn3.bias, incre_modules.1.0.bn3.running_mean, incre_modules.1.0.bn3.running_var, incre_modules.1.0.bn3.num_batches_tracked, incre_modules.1.0.downsample.0.weight, incre_modules.1.0.downsample.1.weight, incre_modules.1.0.downsample.1.bias, incre_modules.1.0.downsample.1.running_mean, incre_modules.1.0.downsample.1.running_var, incre_modules.1.0.downsample.1.num_batches_tracked, incre_modules.2.0.conv1.weight, incre_modules.2.0.bn1.weight, incre_modules.2.0.bn1.bias, incre_modules.2.0.bn1.running_mean, incre_modules.2.0.bn1.running_var, incre_modules.2.0.bn1.num_batches_tracked, incre_modules.2.0.conv2.weight, incre_modules.2.0.bn2.weight, incre_modules.2.0.bn2.bias, incre_modules.2.0.bn2.running_mean, incre_modules.2.0.bn2.running_var, incre_modules.2.0.bn2.num_batches_tracked, incre_modules.2.0.conv3.weight, incre_modules.2.0.bn3.weight, incre_modules.2.0.bn3.bias, incre_modules.2.0.bn3.running_mean, incre_modules.2.0.bn3.running_var, incre_modules.2.0.bn3.num_batches_tracked, incre_modules.2.0.downsample.0.weight, incre_modules.2.0.downsample.1.weight, incre_modules.2.0.downsample.1.bias, incre_modules.2.0.downsample.1.running_mean, incre_modules.2.0.downsample.1.running_var, incre_modules.2.0.downsample.1.num_batches_tracked, incre_modules.3.0.conv1.weight, incre_modules.3.0.bn1.weight, incre_modules.3.0.bn1.bias, incre_modules.3.0.bn1.running_mean, incre_modules.3.0.bn1.running_var, incre_modules.3.0.bn1.num_batches_tracked, incre_modules.3.0.conv2.weight, incre_modules.3.0.bn2.weight, incre_modules.3.0.bn2.bias, incre_modules.3.0.bn2.running_mean, incre_modules.3.0.bn2.running_var, incre_modules.3.0.bn2.num_batches_tracked, incre_modules.3.0.conv3.weight, incre_modules.3.0.bn3.weight, incre_modules.3.0.bn3.bias, incre_modules.3.0.bn3.running_mean, incre_modules.3.0.bn3.running_var, incre_modules.3.0.bn3.num_batches_tracked, incre_modules.3.0.downsample.0.weight, incre_modules.3.0.downsample.1.weight, incre_modules.3.0.downsample.1.bias, incre_modules.3.0.downsample.1.running_mean, incre_modules.3.0.downsample.1.running_var, incre_modules.3.0.downsample.1.num_batches_tracked, downsamp_modules.0.0.weight, downsamp_modules.0.0.bias, downsamp_modules.0.1.weight, downsamp_modules.0.1.bias, downsamp_modules.0.1.running_mean, downsamp_modules.0.1.running_var, downsamp_modules.0.1.num_batches_tracked, downsamp_modules.1.0.weight, downsamp_modules.1.0.bias, downsamp_modules.1.1.weight, downsamp_modules.1.1.bias, downsamp_modules.1.1.running_mean, downsamp_modules.1.1.running_var, downsamp_modules.1.1.num_batches_tracked, downsamp_modules.2.0.weight, downsamp_modules.2.0.bias, downsamp_modules.2.1.weight, downsamp_modules.2.1.bias, downsamp_modules.2.1.running_mean, downsamp_modules.2.1.running_var, downsamp_modules.2.1.num_batches_tracked, final_layer.0.weight, final_layer.0.bias, final_layer.1.weight, final_layer.1.bias, final_layer.1.running_mean, final_layer.1.running_var, final_layer.1.num_batches_tracked, classifier.weight, classifier.bias

2021-01-03 21:56:13,102 - mmseg - INFO - CascadeEncoderDecoder(
  (backbone): HRNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (transition1): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): Sequential(
          (0): Conv2d(256, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage2): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition2): ModuleList(
      (0): None
      (1): None
      (2): Sequential(
        (0): Sequential(
          (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage3): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
      (3): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
          )
        )
        (relu): ReLU()
      )
    )
    (transition3): ModuleList(
      (0): None
      (1): None
      (2): None
      (3): Sequential(
        (0): Sequential(
          (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (stage4): Sequential(
      (0): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (1): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
      (2): HRModule(
        (branches): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(18, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(36, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (3): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (3): BasicBlock(
              (conv1): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (fuse_layers): ModuleList(
          (0): ModuleList(
            (0): None
            (1): Sequential(
              (0): Conv2d(36, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (2): Sequential(
              (0): Conv2d(72, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 18, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (1): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): None
            (2): Sequential(
              (0): Conv2d(72, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
            (3): Sequential(
              (0): Conv2d(144, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (2): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): None
            (3): Sequential(
              (0): Conv2d(144, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): SyncBatchNorm(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Upsample()
            )
          )
          (3): ModuleList(
            (0): Sequential(
              (0): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(18, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (2): Sequential(
                (0): Conv2d(18, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Sequential(
              (0): Sequential(
                (0): Conv2d(36, 36, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
              )
              (1): Sequential(
                (0): Conv2d(36, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Sequential(
              (0): Sequential(
                (0): Conv2d(72, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SyncBatchNorm(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): None
          )
        )
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleList(
    (0): FCNHead(
      input_transform=resize_concat, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss()
      (conv_seg): Conv2d(270, 19, kernel_size=(1, 1), stride=(1, 1))
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(270, 270, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    (1): OCRHead(
      input_transform=resize_concat, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss()
      (conv_seg): Conv2d(512, 19, kernel_size=(1, 1), stride=(1, 1))
      (object_context_block): ObjectAttentionBlock(
        (key_project): Sequential(
          (0): ConvModule(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (query_project): Sequential(
          (0): ConvModule(
            (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (value_project): ConvModule(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (out_project): ConvModule(
          (conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (bottleneck): ConvModule(
          (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (spatial_gather_module): SpatialGatherModule()
      (bottleneck): ConvModule(
        (conv): Conv2d(270, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
)
2021-01-03 21:56:13,312 - mmseg - INFO - Loaded 262 images
2021-01-03 21:56:13,742 - mmseg - INFO - Loaded 33 images
2021-01-03 21:56:13,742 - mmseg - INFO - load checkpoint from work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft/iter_260000.pth
2021-01-03 21:56:14,302 - mmseg - INFO - resumed from epoch: 243, iter 260000
2021-01-03 21:56:14,306 - mmseg - INFO - Start running, host: gandi@Gandi, work_dir: /home/gandi/Donglusen/workspace/mmsegmentation/work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft
2021-01-03 21:56:14,306 - mmseg - INFO - workflow: [('train', 1)], max: 280000 iters
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
[W TensorIterator.cpp:918] Warning: Mixed memory format inputs detected while calling the operator. The operator will output contiguous tensor even if some of the inputs are in channels_last format. (function operator())
2021-01-03 21:56:51,132 - mmseg - INFO - Iter [260050/280000]	lr: 1.019e-03, eta: 4:04:06, time: 0.734, data_time: 0.093, memory: 7313, decode_0.loss_seg: 0.0325, decode_0.acc_seg: 92.8726, decode_1.loss_seg: 0.0739, decode_1.acc_seg: 92.9884, loss: 0.1064
2021-01-03 21:57:25,521 - mmseg - INFO - Iter [260100/280000]	lr: 1.017e-03, eta: 3:55:51, time: 0.688, data_time: 0.097, memory: 7313, decode_0.loss_seg: 0.0314, decode_0.acc_seg: 92.7431, decode_1.loss_seg: 0.0711, decode_1.acc_seg: 92.8456, loss: 0.1025
2021-01-03 21:57:59,548 - mmseg - INFO - Iter [260150/280000]	lr: 1.015e-03, eta: 3:51:53, time: 0.681, data_time: 0.098, memory: 7313, decode_0.loss_seg: 0.0317, decode_0.acc_seg: 92.5276, decode_1.loss_seg: 0.0718, decode_1.acc_seg: 92.6322, loss: 0.1034
2021-01-03 21:58:30,836 - mmseg - INFO - Iter [260200/280000]	lr: 1.012e-03, eta: 3:45:06, time: 0.626, data_time: 0.051, memory: 7313, decode_0.loss_seg: 0.0309, decode_0.acc_seg: 92.9678, decode_1.loss_seg: 0.0703, decode_1.acc_seg: 93.0685, loss: 0.1012
2021-01-03 21:59:04,926 - mmseg - INFO - Iter [260250/280000]	lr: 1.010e-03, eta: 3:44:30, time: 0.682, data_time: 0.098, memory: 7313, decode_0.loss_seg: 0.0318, decode_0.acc_seg: 92.8940, decode_1.loss_seg: 0.0718, decode_1.acc_seg: 93.0032, loss: 0.1035
2021-01-03 21:59:38,833 - mmseg - INFO - Iter [260300/280000]	lr: 1.008e-03, eta: 3:43:43, time: 0.678, data_time: 0.092, memory: 7313, decode_0.loss_seg: 0.0308, decode_0.acc_seg: 92.9800, decode_1.loss_seg: 0.0697, decode_1.acc_seg: 93.0733, loss: 0.1005
2021-01-03 22:00:12,604 - mmseg - INFO - Iter [260350/280000]	lr: 1.006e-03, eta: 3:42:52, time: 0.675, data_time: 0.088, memory: 7313, decode_0.loss_seg: 0.0324, decode_0.acc_seg: 92.5981, decode_1.loss_seg: 0.0733, decode_1.acc_seg: 92.7131, loss: 0.1056
2021-01-03 22:00:44,140 - mmseg - INFO - Iter [260400/280000]	lr: 1.004e-03, eta: 3:40:16, time: 0.631, data_time: 0.053, memory: 7313, decode_0.loss_seg: 0.0315, decode_0.acc_seg: 92.9616, decode_1.loss_seg: 0.0714, decode_1.acc_seg: 93.0730, loss: 0.1029
2021-01-03 22:01:18,112 - mmseg - INFO - Iter [260450/280000]	lr: 1.002e-03, eta: 3:39:54, time: 0.680, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0308, decode_0.acc_seg: 92.9807, decode_1.loss_seg: 0.0696, decode_1.acc_seg: 93.0818, loss: 0.1004
2021-01-03 22:01:51,992 - mmseg - INFO - Iter [260500/280000]	lr: 1.000e-03, eta: 3:39:25, time: 0.677, data_time: 0.094, memory: 7313, decode_0.loss_seg: 0.0313, decode_0.acc_seg: 92.9679, decode_1.loss_seg: 0.0709, decode_1.acc_seg: 93.0770, loss: 0.1022
2021-01-03 22:02:23,287 - mmseg - INFO - Iter [260550/280000]	lr: 9.979e-04, eta: 3:37:24, time: 0.626, data_time: 0.053, memory: 7313, decode_0.loss_seg: 0.0312, decode_0.acc_seg: 93.0783, decode_1.loss_seg: 0.0702, decode_1.acc_seg: 93.1844, loss: 0.1014
2021-01-03 22:02:57,677 - mmseg - INFO - Iter [260600/280000]	lr: 9.958e-04, eta: 3:37:18, time: 0.688, data_time: 0.082, memory: 7313, decode_0.loss_seg: 0.0307, decode_0.acc_seg: 93.1631, decode_1.loss_seg: 0.0692, decode_1.acc_seg: 93.2850, loss: 0.0998
2021-01-03 22:03:31,727 - mmseg - INFO - Iter [260650/280000]	lr: 9.938e-04, eta: 3:36:58, time: 0.681, data_time: 0.092, memory: 7313, decode_0.loss_seg: 0.0305, decode_0.acc_seg: 93.1196, decode_1.loss_seg: 0.0692, decode_1.acc_seg: 93.2333, loss: 0.0996
2021-01-03 22:04:05,719 - mmseg - INFO - Iter [260700/280000]	lr: 9.917e-04, eta: 3:36:34, time: 0.680, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0320, decode_0.acc_seg: 92.4622, decode_1.loss_seg: 0.0726, decode_1.acc_seg: 92.5598, loss: 0.1046
2021-01-03 22:04:37,275 - mmseg - INFO - Iter [260750/280000]	lr: 9.896e-04, eta: 3:35:06, time: 0.631, data_time: 0.044, memory: 7313, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 93.1192, decode_1.loss_seg: 0.0685, decode_1.acc_seg: 93.2297, loss: 0.0986
2021-01-03 22:05:11,493 - mmseg - INFO - Iter [260800/280000]	lr: 9.875e-04, eta: 3:34:49, time: 0.684, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0315, decode_0.acc_seg: 92.9613, decode_1.loss_seg: 0.0715, decode_1.acc_seg: 93.0616, loss: 0.1030
2021-01-03 22:05:45,429 - mmseg - INFO - Iter [260850/280000]	lr: 9.855e-04, eta: 3:34:24, time: 0.679, data_time: 0.099, memory: 7313, decode_0.loss_seg: 0.0300, decode_0.acc_seg: 93.1422, decode_1.loss_seg: 0.0680, decode_1.acc_seg: 93.2460, loss: 0.0980
2021-01-03 22:06:19,437 - mmseg - INFO - Iter [260900/280000]	lr: 9.834e-04, eta: 3:33:59, time: 0.680, data_time: 0.101, memory: 7313, decode_0.loss_seg: 0.0305, decode_0.acc_seg: 92.9401, decode_1.loss_seg: 0.0690, decode_1.acc_seg: 93.0546, loss: 0.0995
2021-01-03 22:06:51,089 - mmseg - INFO - Iter [260950/280000]	lr: 9.813e-04, eta: 3:32:47, time: 0.633, data_time: 0.052, memory: 7313, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 93.2581, decode_1.loss_seg: 0.0667, decode_1.acc_seg: 93.3615, loss: 0.0962
2021-01-03 22:07:25,243 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 22:07:25,243 - mmseg - INFO - Iter [261000/280000]	lr: 9.792e-04, eta: 3:32:25, time: 0.683, data_time: 0.080, memory: 7313, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 93.2002, decode_1.loss_seg: 0.0684, decode_1.acc_seg: 93.3082, loss: 0.0986
2021-01-03 22:07:59,183 - mmseg - INFO - Iter [261050/280000]	lr: 9.771e-04, eta: 3:31:59, time: 0.679, data_time: 0.095, memory: 7313, decode_0.loss_seg: 0.0303, decode_0.acc_seg: 92.3986, decode_1.loss_seg: 0.0688, decode_1.acc_seg: 92.4901, loss: 0.0991
2021-01-03 22:08:30,696 - mmseg - INFO - Iter [261100/280000]	lr: 9.750e-04, eta: 3:30:50, time: 0.630, data_time: 0.041, memory: 7313, decode_0.loss_seg: 0.0305, decode_0.acc_seg: 92.8893, decode_1.loss_seg: 0.0690, decode_1.acc_seg: 92.9925, loss: 0.0995
2021-01-03 22:09:04,958 - mmseg - INFO - Iter [261150/280000]	lr: 9.730e-04, eta: 3:30:30, time: 0.685, data_time: 0.098, memory: 7313, decode_0.loss_seg: 0.0303, decode_0.acc_seg: 92.9829, decode_1.loss_seg: 0.0685, decode_1.acc_seg: 93.0820, loss: 0.0988
2021-01-03 22:09:38,935 - mmseg - INFO - Iter [261200/280000]	lr: 9.709e-04, eta: 3:30:04, time: 0.680, data_time: 0.099, memory: 7313, decode_0.loss_seg: 0.0312, decode_0.acc_seg: 92.6328, decode_1.loss_seg: 0.0710, decode_1.acc_seg: 92.7371, loss: 0.1022
2021-01-03 22:10:12,957 - mmseg - INFO - Iter [261250/280000]	lr: 9.688e-04, eta: 3:29:38, time: 0.680, data_time: 0.103, memory: 7313, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 92.6638, decode_1.loss_seg: 0.0673, decode_1.acc_seg: 92.7640, loss: 0.0969
2021-01-03 22:10:44,566 - mmseg - INFO - Iter [261300/280000]	lr: 9.667e-04, eta: 3:28:36, time: 0.632, data_time: 0.054, memory: 7313, decode_0.loss_seg: 0.0310, decode_0.acc_seg: 93.0872, decode_1.loss_seg: 0.0699, decode_1.acc_seg: 93.2024, loss: 0.1010
2021-01-03 22:11:18,739 - mmseg - INFO - Iter [261350/280000]	lr: 9.646e-04, eta: 3:28:12, time: 0.683, data_time: 0.104, memory: 7313, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 92.8335, decode_1.loss_seg: 0.0678, decode_1.acc_seg: 92.9322, loss: 0.0976
2021-01-03 22:11:52,775 - mmseg - INFO - Iter [261400/280000]	lr: 9.625e-04, eta: 3:27:46, time: 0.681, data_time: 0.090, memory: 7313, decode_0.loss_seg: 0.0318, decode_0.acc_seg: 93.2055, decode_1.loss_seg: 0.0718, decode_1.acc_seg: 93.3271, loss: 0.1036
2021-01-03 22:12:24,207 - mmseg - INFO - Iter [261450/280000]	lr: 9.604e-04, eta: 3:26:46, time: 0.629, data_time: 0.051, memory: 7313, decode_0.loss_seg: 0.0326, decode_0.acc_seg: 92.5046, decode_1.loss_seg: 0.0729, decode_1.acc_seg: 92.6346, loss: 0.1055
2021-01-03 22:12:58,382 - mmseg - INFO - Iter [261500/280000]	lr: 9.584e-04, eta: 3:26:22, time: 0.684, data_time: 0.101, memory: 7313, decode_0.loss_seg: 0.0301, decode_0.acc_seg: 93.1587, decode_1.loss_seg: 0.0681, decode_1.acc_seg: 93.2562, loss: 0.0983
2021-01-03 22:13:32,433 - mmseg - INFO - Iter [261550/280000]	lr: 9.563e-04, eta: 3:25:55, time: 0.681, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 93.0823, decode_1.loss_seg: 0.0676, decode_1.acc_seg: 93.1830, loss: 0.0975
2021-01-03 22:14:06,377 - mmseg - INFO - Iter [261600/280000]	lr: 9.542e-04, eta: 3:25:27, time: 0.679, data_time: 0.096, memory: 7313, decode_0.loss_seg: 0.0312, decode_0.acc_seg: 93.0962, decode_1.loss_seg: 0.0703, decode_1.acc_seg: 93.2049, loss: 0.1015
2021-01-03 22:14:37,798 - mmseg - INFO - Iter [261650/280000]	lr: 9.521e-04, eta: 3:24:30, time: 0.628, data_time: 0.052, memory: 7313, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 92.4382, decode_1.loss_seg: 0.0653, decode_1.acc_seg: 92.5473, loss: 0.0942
2021-01-03 22:15:12,096 - mmseg - INFO - Iter [261700/280000]	lr: 9.500e-04, eta: 3:24:06, time: 0.686, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0301, decode_0.acc_seg: 93.2127, decode_1.loss_seg: 0.0682, decode_1.acc_seg: 93.3166, loss: 0.0983
2021-01-03 22:15:46,090 - mmseg - INFO - Iter [261750/280000]	lr: 9.479e-04, eta: 3:23:38, time: 0.680, data_time: 0.099, memory: 7313, decode_0.loss_seg: 0.0303, decode_0.acc_seg: 93.5087, decode_1.loss_seg: 0.0689, decode_1.acc_seg: 93.6046, loss: 0.0992
2021-01-03 22:16:19,968 - mmseg - INFO - Iter [261800/280000]	lr: 9.458e-04, eta: 3:23:09, time: 0.677, data_time: 0.089, memory: 7313, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 92.8076, decode_1.loss_seg: 0.0681, decode_1.acc_seg: 92.9174, loss: 0.0983
2021-01-03 22:16:51,420 - mmseg - INFO - Iter [261850/280000]	lr: 9.437e-04, eta: 3:22:15, time: 0.629, data_time: 0.050, memory: 7313, decode_0.loss_seg: 0.0308, decode_0.acc_seg: 93.0898, decode_1.loss_seg: 0.0693, decode_1.acc_seg: 93.2061, loss: 0.1001
2021-01-03 22:17:25,418 - mmseg - INFO - Iter [261900/280000]	lr: 9.416e-04, eta: 3:21:47, time: 0.680, data_time: 0.090, memory: 7313, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 93.2726, decode_1.loss_seg: 0.0653, decode_1.acc_seg: 93.3622, loss: 0.0941
2021-01-03 22:17:59,484 - mmseg - INFO - Iter [261950/280000]	lr: 9.395e-04, eta: 3:21:20, time: 0.681, data_time: 0.090, memory: 7313, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 92.5802, decode_1.loss_seg: 0.0654, decode_1.acc_seg: 92.6819, loss: 0.0943
2021-01-03 22:18:30,955 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 22:18:30,955 - mmseg - INFO - Iter [262000/280000]	lr: 9.375e-04, eta: 3:20:28, time: 0.629, data_time: 0.054, memory: 7313, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 92.6420, decode_1.loss_seg: 0.0670, decode_1.acc_seg: 92.7465, loss: 0.0967
2021-01-03 22:19:05,376 - mmseg - INFO - Iter [262050/280000]	lr: 9.354e-04, eta: 3:20:04, time: 0.688, data_time: 0.106, memory: 7313, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 92.8930, decode_1.loss_seg: 0.0651, decode_1.acc_seg: 92.9943, loss: 0.0939
2021-01-03 22:19:39,482 - mmseg - INFO - Iter [262100/280000]	lr: 9.333e-04, eta: 3:19:36, time: 0.682, data_time: 0.091, memory: 7313, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 92.7542, decode_1.loss_seg: 0.0657, decode_1.acc_seg: 92.8596, loss: 0.0947
2021-01-03 22:20:13,614 - mmseg - INFO - Iter [262150/280000]	lr: 9.312e-04, eta: 3:19:08, time: 0.683, data_time: 0.101, memory: 7313, decode_0.loss_seg: 0.0304, decode_0.acc_seg: 93.1345, decode_1.loss_seg: 0.0686, decode_1.acc_seg: 93.2320, loss: 0.0990
2021-01-03 22:20:45,150 - mmseg - INFO - Iter [262200/280000]	lr: 9.291e-04, eta: 3:18:19, time: 0.631, data_time: 0.041, memory: 7313, decode_0.loss_seg: 0.0300, decode_0.acc_seg: 93.1230, decode_1.loss_seg: 0.0677, decode_1.acc_seg: 93.2298, loss: 0.0977
2021-01-03 22:21:19,345 - mmseg - INFO - Iter [262250/280000]	lr: 9.270e-04, eta: 3:17:52, time: 0.684, data_time: 0.100, memory: 7313, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 93.0772, decode_1.loss_seg: 0.0673, decode_1.acc_seg: 93.1818, loss: 0.0970
2021-01-03 22:21:53,303 - mmseg - INFO - Iter [262300/280000]	lr: 9.249e-04, eta: 3:17:22, time: 0.679, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 92.7311, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 92.8351, loss: 0.0960
2021-01-03 22:22:27,238 - mmseg - INFO - Iter [262350/280000]	lr: 9.228e-04, eta: 3:16:52, time: 0.679, data_time: 0.098, memory: 7313, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 93.3758, decode_1.loss_seg: 0.0658, decode_1.acc_seg: 93.4797, loss: 0.0948
2021-01-03 22:22:59,009 - mmseg - INFO - Iter [262400/280000]	lr: 9.207e-04, eta: 3:16:06, time: 0.635, data_time: 0.046, memory: 7313, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 92.9703, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 93.0806, loss: 0.0960
2021-01-03 22:23:33,123 - mmseg - INFO - Iter [262450/280000]	lr: 9.186e-04, eta: 3:15:38, time: 0.682, data_time: 0.098, memory: 7313, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 93.3018, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 93.4179, loss: 0.0973
2021-01-03 22:24:07,098 - mmseg - INFO - Iter [262500/280000]	lr: 9.165e-04, eta: 3:15:08, time: 0.680, data_time: 0.097, memory: 7313, decode_0.loss_seg: 0.0311, decode_0.acc_seg: 92.8776, decode_1.loss_seg: 0.0697, decode_1.acc_seg: 93.0082, loss: 0.1008
2021-01-03 22:24:38,499 - mmseg - INFO - Iter [262550/280000]	lr: 9.144e-04, eta: 3:14:21, time: 0.628, data_time: 0.053, memory: 7313, decode_0.loss_seg: 0.0304, decode_0.acc_seg: 93.0610, decode_1.loss_seg: 0.0687, decode_1.acc_seg: 93.1757, loss: 0.0990
2021-01-03 22:25:12,847 - mmseg - INFO - Iter [262600/280000]	lr: 9.123e-04, eta: 3:13:54, time: 0.687, data_time: 0.101, memory: 7313, decode_0.loss_seg: 0.0305, decode_0.acc_seg: 92.8784, decode_1.loss_seg: 0.0694, decode_1.acc_seg: 92.9828, loss: 0.0999
2021-01-03 22:25:46,914 - mmseg - INFO - Iter [262650/280000]	lr: 9.102e-04, eta: 3:13:24, time: 0.681, data_time: 0.093, memory: 7313, decode_0.loss_seg: 0.0300, decode_0.acc_seg: 92.7416, decode_1.loss_seg: 0.0679, decode_1.acc_seg: 92.8473, loss: 0.0979
2021-01-03 22:26:20,893 - mmseg - INFO - Iter [262700/280000]	lr: 9.081e-04, eta: 3:12:54, time: 0.680, data_time: 0.092, memory: 7313, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 93.0498, decode_1.loss_seg: 0.0686, decode_1.acc_seg: 93.1480, loss: 0.0988
2021-01-03 22:26:52,383 - mmseg - INFO - Iter [262750/280000]	lr: 9.060e-04, eta: 3:12:08, time: 0.630, data_time: 0.053, memory: 7313, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 92.9711, decode_1.loss_seg: 0.0652, decode_1.acc_seg: 93.0905, loss: 0.0942
2021-01-03 22:27:26,449 - mmseg - INFO - Iter [262800/280000]	lr: 9.039e-04, eta: 3:11:39, time: 0.681, data_time: 0.100, memory: 7313, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 92.9865, decode_1.loss_seg: 0.0659, decode_1.acc_seg: 93.0945, loss: 0.0951
2021-01-03 22:28:00,500 - mmseg - INFO - Iter [262850/280000]	lr: 9.018e-04, eta: 3:11:09, time: 0.681, data_time: 0.095, memory: 7313, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.3322, decode_1.loss_seg: 0.0671, decode_1.acc_seg: 93.4273, loss: 0.0968
2021-01-03 22:28:31,822 - mmseg - INFO - Iter [262900/280000]	lr: 8.997e-04, eta: 3:10:23, time: 0.626, data_time: 0.046, memory: 7313, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.3611, decode_1.loss_seg: 0.0664, decode_1.acc_seg: 93.4813, loss: 0.0961
2021-01-03 22:29:06,030 - mmseg - INFO - Iter [262950/280000]	lr: 8.976e-04, eta: 3:09:55, time: 0.684, data_time: 0.099, memory: 7313, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 92.8288, decode_1.loss_seg: 0.0642, decode_1.acc_seg: 92.9184, loss: 0.0925
2021-01-03 22:29:40,267 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 22:29:40,267 - mmseg - INFO - Iter [263000/280000]	lr: 8.955e-04, eta: 3:09:26, time: 0.685, data_time: 0.094, memory: 7313, decode_0.loss_seg: 0.0308, decode_0.acc_seg: 93.0440, decode_1.loss_seg: 0.0695, decode_1.acc_seg: 93.1491, loss: 0.1003
2021-01-03 22:30:14,184 - mmseg - INFO - Iter [263050/280000]	lr: 8.934e-04, eta: 3:08:55, time: 0.678, data_time: 0.098, memory: 7313, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 92.8699, decode_1.loss_seg: 0.0635, decode_1.acc_seg: 92.9646, loss: 0.0916
2021-01-03 22:30:45,771 - mmseg - INFO - Iter [263100/280000]	lr: 8.913e-04, eta: 3:08:12, time: 0.632, data_time: 0.054, memory: 7313, decode_0.loss_seg: 0.0286, decode_0.acc_seg: 92.9250, decode_1.loss_seg: 0.0651, decode_1.acc_seg: 93.0171, loss: 0.0937
2021-01-03 22:31:19,964 - mmseg - INFO - Iter [263150/280000]	lr: 8.891e-04, eta: 3:07:42, time: 0.684, data_time: 0.101, memory: 7313, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.4474, decode_1.loss_seg: 0.0657, decode_1.acc_seg: 93.5507, loss: 0.0948
2021-01-03 22:31:53,720 - mmseg - INFO - Iter [263200/280000]	lr: 8.870e-04, eta: 3:07:11, time: 0.675, data_time: 0.083, memory: 7313, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.1947, decode_1.loss_seg: 0.0655, decode_1.acc_seg: 93.2947, loss: 0.0946
2021-01-03 22:32:27,816 - mmseg - INFO - Iter [263250/280000]	lr: 8.849e-04, eta: 3:06:41, time: 0.682, data_time: 0.101, memory: 7313, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 92.6841, decode_1.loss_seg: 0.0676, decode_1.acc_seg: 92.7811, loss: 0.0972
2021-01-03 22:32:59,510 - mmseg - INFO - Iter [263300/280000]	lr: 8.828e-04, eta: 3:05:58, time: 0.634, data_time: 0.054, memory: 7313, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 92.9703, decode_1.loss_seg: 0.0662, decode_1.acc_seg: 93.0670, loss: 0.0955
2021-01-03 22:33:33,743 - mmseg - INFO - Iter [263350/280000]	lr: 8.807e-04, eta: 3:05:29, time: 0.685, data_time: 0.094, memory: 7313, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 92.7382, decode_1.loss_seg: 0.0643, decode_1.acc_seg: 92.8277, loss: 0.0927
2021-01-03 22:34:07,747 - mmseg - INFO - Iter [263400/280000]	lr: 8.786e-04, eta: 3:04:59, time: 0.680, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0342, decode_0.acc_seg: 92.7578, decode_1.loss_seg: 0.0792, decode_1.acc_seg: 92.8769, loss: 0.1134
2021-01-03 22:34:39,215 - mmseg - INFO - Iter [263450/280000]	lr: 8.765e-04, eta: 3:04:16, time: 0.629, data_time: 0.052, memory: 7313, decode_0.loss_seg: 0.0307, decode_0.acc_seg: 92.8397, decode_1.loss_seg: 0.0702, decode_1.acc_seg: 92.9456, loss: 0.1009
2021-01-03 22:35:13,401 - mmseg - INFO - Iter [263500/280000]	lr: 8.744e-04, eta: 3:03:46, time: 0.684, data_time: 0.088, memory: 7313, decode_0.loss_seg: 0.0308, decode_0.acc_seg: 93.0561, decode_1.loss_seg: 0.0696, decode_1.acc_seg: 93.1659, loss: 0.1004
2021-01-03 22:35:47,520 - mmseg - INFO - Iter [263550/280000]	lr: 8.723e-04, eta: 3:03:16, time: 0.682, data_time: 0.101, memory: 7313, decode_0.loss_seg: 0.0309, decode_0.acc_seg: 92.7758, decode_1.loss_seg: 0.0700, decode_1.acc_seg: 92.8851, loss: 0.1008
2021-01-03 22:36:21,669 - mmseg - INFO - Iter [263600/280000]	lr: 8.702e-04, eta: 3:02:46, time: 0.683, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0311, decode_0.acc_seg: 92.9250, decode_1.loss_seg: 0.0702, decode_1.acc_seg: 93.0344, loss: 0.1013
2021-01-03 22:36:53,232 - mmseg - INFO - Iter [263650/280000]	lr: 8.680e-04, eta: 3:02:04, time: 0.631, data_time: 0.052, memory: 7313, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 92.8486, decode_1.loss_seg: 0.0671, decode_1.acc_seg: 92.9601, loss: 0.0970
2021-01-03 22:37:27,517 - mmseg - INFO - Iter [263700/280000]	lr: 8.659e-04, eta: 3:01:34, time: 0.686, data_time: 0.102, memory: 7313, decode_0.loss_seg: 0.0300, decode_0.acc_seg: 93.4224, decode_1.loss_seg: 0.0678, decode_1.acc_seg: 93.5302, loss: 0.0978
2021-01-03 22:38:01,387 - mmseg - INFO - Iter [263750/280000]	lr: 8.638e-04, eta: 3:01:03, time: 0.678, data_time: 0.097, memory: 7313, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 93.1013, decode_1.loss_seg: 0.0682, decode_1.acc_seg: 93.2052, loss: 0.0984
2021-01-03 22:38:35,515 - mmseg - INFO - Iter [263800/280000]	lr: 8.617e-04, eta: 3:00:32, time: 0.682, data_time: 0.100, memory: 7313, decode_0.loss_seg: 0.0298, decode_0.acc_seg: 92.9556, decode_1.loss_seg: 0.0670, decode_1.acc_seg: 93.0576, loss: 0.0968
2021-01-03 22:39:07,308 - mmseg - INFO - Iter [263850/280000]	lr: 8.596e-04, eta: 2:59:52, time: 0.636, data_time: 0.053, memory: 7313, decode_0.loss_seg: 0.0304, decode_0.acc_seg: 92.6253, decode_1.loss_seg: 0.0683, decode_1.acc_seg: 92.7552, loss: 0.0988
2021-01-03 22:39:41,378 - mmseg - INFO - Iter [263900/280000]	lr: 8.575e-04, eta: 2:59:21, time: 0.681, data_time: 0.100, memory: 7313, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 92.8888, decode_1.loss_seg: 0.0659, decode_1.acc_seg: 92.9989, loss: 0.0955
2021-01-03 22:40:15,260 - mmseg - INFO - Iter [263950/280000]	lr: 8.553e-04, eta: 2:58:50, time: 0.678, data_time: 0.100, memory: 7313, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 93.3961, decode_1.loss_seg: 0.0658, decode_1.acc_seg: 93.4999, loss: 0.0950
2021-01-03 22:40:46,688 - mmseg - INFO - Saving checkpoint at 264000 iterations
[                                                  ] 0/33, elapsed: 0s, ETA:[>                                 ] 1/33, 0.3 task/s, elapsed: 3s, ETA:   104s[>>                                ] 2/33, 0.6 task/s, elapsed: 3s, ETA:    50s[>>>                               ] 3/33, 0.9 task/s, elapsed: 3s, ETA:    32s[>>>>                              ] 4/33, 1.2 task/s, elapsed: 3s, ETA:    25s[>>>>>                             ] 5/33, 1.5 task/s, elapsed: 3s, ETA:    19s[>>>>>>                            ] 6/33, 1.8 task/s, elapsed: 3s, ETA:    15s[>>>>>>>                           ] 7/33, 2.0 task/s, elapsed: 4s, ETA:    13s[>>>>>>>>                          ] 8/33, 2.3 task/s, elapsed: 4s, ETA:    11s[>>>>>>>>>                         ] 9/33, 2.6 task/s, elapsed: 4s, ETA:     9s[>>>>>>>>>>                       ] 10/33, 2.7 task/s, elapsed: 4s, ETA:     8s[>>>>>>>>>>>                      ] 11/33, 3.0 task/s, elapsed: 4s, ETA:     7s[>>>>>>>>>>>>                     ] 12/33, 3.3 task/s, elapsed: 4s, ETA:     6s[>>>>>>>>>>>>>                    ] 13/33, 3.4 task/s, elapsed: 4s, ETA:     6s[>>>>>>>>>>>>>>                   ] 14/33, 3.7 task/s, elapsed: 4s, ETA:     5s[>>>>>>>>>>>>>>>                  ] 15/33, 3.9 task/s, elapsed: 4s, ETA:     5s[>>>>>>>>>>>>>>>>                 ] 16/33, 4.0 task/s, elapsed: 4s, ETA:     4s[>>>>>>>>>>>>>>>>>                ] 17/33, 4.3 task/s, elapsed: 4s, ETA:     4s[>>>>>>>>>>>>>>>>>>               ] 18/33, 4.5 task/s, elapsed: 4s, ETA:     3s[>>>>>>>>>>>>>>>>>>>              ] 19/33, 4.6 task/s, elapsed: 4s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>             ] 20/33, 4.9 task/s, elapsed: 4s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>            ] 21/33, 5.1 task/s, elapsed: 4s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>           ] 22/33, 5.2 task/s, elapsed: 4s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>          ] 23/33, 5.4 task/s, elapsed: 4s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>         ] 24/33, 5.7 task/s, elapsed: 4s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>        ] 25/33, 5.7 task/s, elapsed: 4s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>       ] 26/33, 5.9 task/s, elapsed: 4s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>      ] 27/33, 6.2 task/s, elapsed: 4s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>     ] 28/33, 6.2 task/s, elapsed: 5s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 29/33, 6.4 task/s, elapsed: 5s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 30/33, 6.6 task/s, elapsed: 5s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 31/33, 6.6 task/s, elapsed: 5s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 32/33, 6.8 task/s, elapsed: 5s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 33/33, 7.1 task/s, elapsed: 5s, ETA:     0s

/home/gandi/Donglusen/workspace/mmsegmentation/mmseg/core/evaluation/metrics.py:162: RuntimeWarning: invalid value encountered in true_divide
  acc = total_area_intersect / total_area_label
/home/gandi/Donglusen/workspace/mmsegmentation/mmseg/core/evaluation/metrics.py:166: RuntimeWarning: invalid value encountered in true_divide
  iou = total_area_intersect / total_area_union
2021-01-03 22:40:54,541 - mmseg - INFO - per class results:
2021-01-03 22:40:54,542 - mmseg - INFO - 
+---------------+-------+-------+
| Class         | IoU   | Acc   |
+---------------+-------+-------+
| road          | 99.42 | 99.75 |
| sidewalk      | 93.11 | 96.35 |
| building      | 93.87 | 97.04 |
| wall          | 60.56 | 69.89 |
| fence         | 50.59 | 58.54 |
| pole          | 66.33 | 76.55 |
| traffic light | 72.84 | 80.06 |
| traffic sign  | 82.41 | 86.68 |
| vegetation    | 93.94 | 97.26 |
| terrain       | 73.81 | 84.44 |
| sky           | 96.3  | 98.28 |
| person        | 78.83 | 86.84 |
| rider         | 67.35 | 83.27 |
| car           | 95.24 | 97.9  |
| truck         | 40.8  | 49.74 |
| bus           | 89.17 | 90.59 |
| train         | nan   | nan   |
| motorcycle    | 28.9  | 32.34 |
| bicycle       | 82.14 | 91.17 |
+---------------+-------+-------+
2021-01-03 22:40:54,542 - mmseg - INFO - Summary:
2021-01-03 22:40:54,542 - mmseg - INFO - 
+--------+-------+-------+-------+
| Scope  | mIoU  | mAcc  | aAcc  |
+--------+-------+-------+-------+
| global | 75.87 | 82.04 | 97.36 |
+--------+-------+-------+-------+
2021-01-03 22:40:54,565 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 22:40:54,566 - mmseg - INFO - Iter(val) [264000]	mIoU: 0.7587, mAcc: 0.8204, aAcc: 0.9736
2021-01-03 22:41:28,850 - mmseg - INFO - Iter [264050/280000]	lr: 8.511e-04, eta: 2:56:05, time: 0.839, data_time: 0.247, memory: 7318, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 92.3923, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 92.4987, loss: 0.0973
2021-01-03 22:42:02,957 - mmseg - INFO - Iter [264100/280000]	lr: 8.490e-04, eta: 2:55:36, time: 0.682, data_time: 0.104, memory: 7318, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 92.5388, decode_1.loss_seg: 0.0678, decode_1.acc_seg: 92.6441, loss: 0.0980
2021-01-03 22:42:36,999 - mmseg - INFO - Iter [264150/280000]	lr: 8.469e-04, eta: 2:55:06, time: 0.681, data_time: 0.090, memory: 7318, decode_0.loss_seg: 0.0294, decode_0.acc_seg: 92.4893, decode_1.loss_seg: 0.0668, decode_1.acc_seg: 92.5821, loss: 0.0963
2021-01-03 22:43:08,720 - mmseg - INFO - Iter [264200/280000]	lr: 8.447e-04, eta: 2:54:27, time: 0.634, data_time: 0.052, memory: 7318, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 92.3398, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 92.4397, loss: 0.0972
2021-01-03 22:43:42,882 - mmseg - INFO - Iter [264250/280000]	lr: 8.426e-04, eta: 2:53:58, time: 0.683, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 93.3237, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 93.4214, loss: 0.0958
2021-01-03 22:44:16,801 - mmseg - INFO - Iter [264300/280000]	lr: 8.405e-04, eta: 2:53:28, time: 0.678, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 92.6327, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 92.7280, loss: 0.0958
2021-01-03 22:44:48,336 - mmseg - INFO - Iter [264350/280000]	lr: 8.384e-04, eta: 2:52:49, time: 0.631, data_time: 0.054, memory: 7318, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 92.9161, decode_1.loss_seg: 0.0664, decode_1.acc_seg: 93.0136, loss: 0.0957
2021-01-03 22:45:22,524 - mmseg - INFO - Iter [264400/280000]	lr: 8.363e-04, eta: 2:52:20, time: 0.684, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.3794, decode_1.loss_seg: 0.0669, decode_1.acc_seg: 93.4843, loss: 0.0967
2021-01-03 22:45:56,592 - mmseg - INFO - Iter [264450/280000]	lr: 8.341e-04, eta: 2:51:50, time: 0.681, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0294, decode_0.acc_seg: 93.0692, decode_1.loss_seg: 0.0663, decode_1.acc_seg: 93.1684, loss: 0.0957
2021-01-03 22:46:30,611 - mmseg - INFO - Iter [264500/280000]	lr: 8.320e-04, eta: 2:51:19, time: 0.680, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 93.1445, decode_1.loss_seg: 0.0663, decode_1.acc_seg: 93.2433, loss: 0.0957
2021-01-03 22:47:02,063 - mmseg - INFO - Iter [264550/280000]	lr: 8.299e-04, eta: 2:50:41, time: 0.629, data_time: 0.050, memory: 7318, decode_0.loss_seg: 0.0297, decode_0.acc_seg: 93.1419, decode_1.loss_seg: 0.0670, decode_1.acc_seg: 93.2450, loss: 0.0967
2021-01-03 22:47:36,281 - mmseg - INFO - Iter [264600/280000]	lr: 8.278e-04, eta: 2:50:11, time: 0.684, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0302, decode_0.acc_seg: 92.6251, decode_1.loss_seg: 0.0675, decode_1.acc_seg: 92.7374, loss: 0.0977
2021-01-03 22:48:10,220 - mmseg - INFO - Iter [264650/280000]	lr: 8.256e-04, eta: 2:49:40, time: 0.679, data_time: 0.088, memory: 7318, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 93.0719, decode_1.loss_seg: 0.0668, decode_1.acc_seg: 93.1699, loss: 0.0964
2021-01-03 22:48:44,232 - mmseg - INFO - Iter [264700/280000]	lr: 8.235e-04, eta: 2:49:10, time: 0.680, data_time: 0.084, memory: 7318, decode_0.loss_seg: 0.0299, decode_0.acc_seg: 93.0771, decode_1.loss_seg: 0.0678, decode_1.acc_seg: 93.1747, loss: 0.0977
2021-01-03 22:49:15,799 - mmseg - INFO - Iter [264750/280000]	lr: 8.214e-04, eta: 2:48:32, time: 0.631, data_time: 0.049, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 92.9951, decode_1.loss_seg: 0.0639, decode_1.acc_seg: 93.0857, loss: 0.0922
2021-01-03 22:49:49,854 - mmseg - INFO - Iter [264800/280000]	lr: 8.192e-04, eta: 2:48:01, time: 0.681, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 93.1211, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 93.2129, loss: 0.0956
2021-01-03 22:50:23,762 - mmseg - INFO - Iter [264850/280000]	lr: 8.171e-04, eta: 2:47:31, time: 0.678, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 92.8233, decode_1.loss_seg: 0.0670, decode_1.acc_seg: 92.9250, loss: 0.0966
2021-01-03 22:50:55,208 - mmseg - INFO - Iter [264900/280000]	lr: 8.150e-04, eta: 2:46:52, time: 0.629, data_time: 0.049, memory: 7318, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 92.8687, decode_1.loss_seg: 0.0665, decode_1.acc_seg: 92.9705, loss: 0.0961
2021-01-03 22:51:29,373 - mmseg - INFO - Iter [264950/280000]	lr: 8.129e-04, eta: 2:46:22, time: 0.683, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 92.9288, decode_1.loss_seg: 0.0642, decode_1.acc_seg: 93.0278, loss: 0.0926
2021-01-03 22:52:03,628 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 22:52:03,629 - mmseg - INFO - Iter [265000/280000]	lr: 8.107e-04, eta: 2:45:52, time: 0.685, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 93.0690, decode_1.loss_seg: 0.0644, decode_1.acc_seg: 93.1766, loss: 0.0931
2021-01-03 22:52:37,681 - mmseg - INFO - Iter [265050/280000]	lr: 8.086e-04, eta: 2:45:21, time: 0.681, data_time: 0.094, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.1736, decode_1.loss_seg: 0.0642, decode_1.acc_seg: 93.2755, loss: 0.0925
2021-01-03 22:53:09,096 - mmseg - INFO - Iter [265100/280000]	lr: 8.065e-04, eta: 2:44:43, time: 0.628, data_time: 0.052, memory: 7318, decode_0.loss_seg: 0.0286, decode_0.acc_seg: 92.9544, decode_1.loss_seg: 0.0642, decode_1.acc_seg: 93.0590, loss: 0.0928
2021-01-03 22:53:43,237 - mmseg - INFO - Iter [265150/280000]	lr: 8.043e-04, eta: 2:44:13, time: 0.683, data_time: 0.097, memory: 7318, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 92.8884, decode_1.loss_seg: 0.0654, decode_1.acc_seg: 92.9877, loss: 0.0942
2021-01-03 22:54:17,241 - mmseg - INFO - Iter [265200/280000]	lr: 8.022e-04, eta: 2:43:42, time: 0.680, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 93.1945, decode_1.loss_seg: 0.0646, decode_1.acc_seg: 93.3003, loss: 0.0934
2021-01-03 22:54:51,136 - mmseg - INFO - Iter [265250/280000]	lr: 8.001e-04, eta: 2:43:11, time: 0.678, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 93.4461, decode_1.loss_seg: 0.0647, decode_1.acc_seg: 93.5496, loss: 0.0933
2021-01-03 22:55:22,747 - mmseg - INFO - Iter [265300/280000]	lr: 7.979e-04, eta: 2:42:33, time: 0.632, data_time: 0.051, memory: 7318, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 93.4846, decode_1.loss_seg: 0.0653, decode_1.acc_seg: 93.5890, loss: 0.0942
2021-01-03 22:55:56,765 - mmseg - INFO - Iter [265350/280000]	lr: 7.958e-04, eta: 2:42:02, time: 0.680, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 92.8323, decode_1.loss_seg: 0.0655, decode_1.acc_seg: 92.9319, loss: 0.0944
2021-01-03 22:56:30,712 - mmseg - INFO - Iter [265400/280000]	lr: 7.936e-04, eta: 2:41:31, time: 0.679, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 93.1791, decode_1.loss_seg: 0.0648, decode_1.acc_seg: 93.2775, loss: 0.0936
2021-01-03 22:57:02,248 - mmseg - INFO - Iter [265450/280000]	lr: 7.915e-04, eta: 2:40:54, time: 0.631, data_time: 0.050, memory: 7318, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 92.7036, decode_1.loss_seg: 0.0656, decode_1.acc_seg: 92.8005, loss: 0.0946
2021-01-03 22:57:36,436 - mmseg - INFO - Iter [265500/280000]	lr: 7.894e-04, eta: 2:40:23, time: 0.684, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0290, decode_0.acc_seg: 92.9781, decode_1.loss_seg: 0.0655, decode_1.acc_seg: 93.0775, loss: 0.0944
2021-01-03 22:58:10,355 - mmseg - INFO - Iter [265550/280000]	lr: 7.872e-04, eta: 2:39:52, time: 0.678, data_time: 0.097, memory: 7318, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 93.6804, decode_1.loss_seg: 0.0629, decode_1.acc_seg: 93.7919, loss: 0.0909
2021-01-03 22:58:44,326 - mmseg - INFO - Iter [265600/280000]	lr: 7.851e-04, eta: 2:39:21, time: 0.679, data_time: 0.095, memory: 7318, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.1158, decode_1.loss_seg: 0.0661, decode_1.acc_seg: 93.2175, loss: 0.0951
2021-01-03 22:59:15,876 - mmseg - INFO - Iter [265650/280000]	lr: 7.829e-04, eta: 2:38:43, time: 0.631, data_time: 0.049, memory: 7318, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 92.9702, decode_1.loss_seg: 0.0653, decode_1.acc_seg: 93.0787, loss: 0.0942
2021-01-03 22:59:49,882 - mmseg - INFO - Iter [265700/280000]	lr: 7.808e-04, eta: 2:38:12, time: 0.680, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0292, decode_0.acc_seg: 92.9455, decode_1.loss_seg: 0.0660, decode_1.acc_seg: 93.0459, loss: 0.0952
2021-01-03 23:00:23,965 - mmseg - INFO - Iter [265750/280000]	lr: 7.787e-04, eta: 2:37:41, time: 0.681, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 93.1457, decode_1.loss_seg: 0.0649, decode_1.acc_seg: 93.2440, loss: 0.0936
2021-01-03 23:00:55,561 - mmseg - INFO - Iter [265800/280000]	lr: 7.765e-04, eta: 2:37:04, time: 0.632, data_time: 0.056, memory: 7318, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 93.0743, decode_1.loss_seg: 0.0648, decode_1.acc_seg: 93.1844, loss: 0.0935
2021-01-03 23:01:29,797 - mmseg - INFO - Iter [265850/280000]	lr: 7.744e-04, eta: 2:36:33, time: 0.685, data_time: 0.092, memory: 7318, decode_0.loss_seg: 0.0300, decode_0.acc_seg: 93.1048, decode_1.loss_seg: 0.0675, decode_1.acc_seg: 93.2139, loss: 0.0974
2021-01-03 23:02:03,917 - mmseg - INFO - Iter [265900/280000]	lr: 7.722e-04, eta: 2:36:02, time: 0.682, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.4190, decode_1.loss_seg: 0.0636, decode_1.acc_seg: 93.5215, loss: 0.0919
2021-01-03 23:02:37,711 - mmseg - INFO - Iter [265950/280000]	lr: 7.701e-04, eta: 2:35:31, time: 0.676, data_time: 0.093, memory: 7318, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 93.3117, decode_1.loss_seg: 0.0659, decode_1.acc_seg: 93.4120, loss: 0.0952
2021-01-03 23:03:09,415 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 23:03:09,415 - mmseg - INFO - Iter [266000/280000]	lr: 7.679e-04, eta: 2:34:54, time: 0.634, data_time: 0.057, memory: 7318, decode_0.loss_seg: 0.0300, decode_0.acc_seg: 93.0120, decode_1.loss_seg: 0.0674, decode_1.acc_seg: 93.1267, loss: 0.0973
2021-01-03 23:03:43,574 - mmseg - INFO - Iter [266050/280000]	lr: 7.658e-04, eta: 2:34:23, time: 0.683, data_time: 0.095, memory: 7318, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 92.8854, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 92.9781, loss: 0.0924
2021-01-03 23:04:17,494 - mmseg - INFO - Iter [266100/280000]	lr: 7.636e-04, eta: 2:33:51, time: 0.678, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0277, decode_0.acc_seg: 92.7630, decode_1.loss_seg: 0.0626, decode_1.acc_seg: 92.8549, loss: 0.0903
2021-01-03 23:04:51,608 - mmseg - INFO - Iter [266150/280000]	lr: 7.615e-04, eta: 2:33:20, time: 0.682, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 93.6046, decode_1.loss_seg: 0.0661, decode_1.acc_seg: 93.7086, loss: 0.0954
2021-01-03 23:05:23,196 - mmseg - INFO - Iter [266200/280000]	lr: 7.593e-04, eta: 2:32:43, time: 0.632, data_time: 0.052, memory: 7318, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.0081, decode_1.loss_seg: 0.0655, decode_1.acc_seg: 93.1066, loss: 0.0946
2021-01-03 23:05:57,296 - mmseg - INFO - Iter [266250/280000]	lr: 7.572e-04, eta: 2:32:12, time: 0.682, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.2819, decode_1.loss_seg: 0.0636, decode_1.acc_seg: 93.3703, loss: 0.0917
2021-01-03 23:06:31,312 - mmseg - INFO - Iter [266300/280000]	lr: 7.550e-04, eta: 2:31:41, time: 0.680, data_time: 0.092, memory: 7318, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 92.9062, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 93.0140, loss: 0.0924
2021-01-03 23:07:02,730 - mmseg - INFO - Iter [266350/280000]	lr: 7.529e-04, eta: 2:31:04, time: 0.628, data_time: 0.051, memory: 7318, decode_0.loss_seg: 0.0278, decode_0.acc_seg: 93.3086, decode_1.loss_seg: 0.0633, decode_1.acc_seg: 93.4015, loss: 0.0911
2021-01-03 23:07:37,036 - mmseg - INFO - Iter [266400/280000]	lr: 7.507e-04, eta: 2:30:33, time: 0.686, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 92.9610, decode_1.loss_seg: 0.0644, decode_1.acc_seg: 93.0769, loss: 0.0932
2021-01-03 23:08:11,162 - mmseg - INFO - Iter [266450/280000]	lr: 7.486e-04, eta: 2:30:01, time: 0.682, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0300, decode_0.acc_seg: 93.2209, decode_1.loss_seg: 0.0681, decode_1.acc_seg: 93.3215, loss: 0.0981
2021-01-03 23:08:45,427 - mmseg - INFO - Iter [266500/280000]	lr: 7.464e-04, eta: 2:29:30, time: 0.685, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0296, decode_0.acc_seg: 92.8903, decode_1.loss_seg: 0.0670, decode_1.acc_seg: 92.9987, loss: 0.0967
2021-01-03 23:09:17,039 - mmseg - INFO - Iter [266550/280000]	lr: 7.443e-04, eta: 2:28:54, time: 0.632, data_time: 0.056, memory: 7318, decode_0.loss_seg: 0.0301, decode_0.acc_seg: 93.1019, decode_1.loss_seg: 0.0677, decode_1.acc_seg: 93.2190, loss: 0.0978
2021-01-03 23:09:51,073 - mmseg - INFO - Iter [266600/280000]	lr: 7.421e-04, eta: 2:28:22, time: 0.681, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 92.7212, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 92.8174, loss: 0.0922
2021-01-03 23:10:25,108 - mmseg - INFO - Iter [266650/280000]	lr: 7.400e-04, eta: 2:27:51, time: 0.681, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 93.1777, decode_1.loss_seg: 0.0660, decode_1.acc_seg: 93.2779, loss: 0.0952
2021-01-03 23:10:59,089 - mmseg - INFO - Iter [266700/280000]	lr: 7.378e-04, eta: 2:27:19, time: 0.680, data_time: 0.091, memory: 7318, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 93.0071, decode_1.loss_seg: 0.0655, decode_1.acc_seg: 93.1124, loss: 0.0944
2021-01-03 23:11:30,749 - mmseg - INFO - Iter [266750/280000]	lr: 7.356e-04, eta: 2:26:43, time: 0.633, data_time: 0.050, memory: 7318, decode_0.loss_seg: 0.0295, decode_0.acc_seg: 93.0514, decode_1.loss_seg: 0.0664, decode_1.acc_seg: 93.1500, loss: 0.0959
2021-01-03 23:12:04,914 - mmseg - INFO - Iter [266800/280000]	lr: 7.335e-04, eta: 2:26:11, time: 0.683, data_time: 0.092, memory: 7318, decode_0.loss_seg: 0.0293, decode_0.acc_seg: 93.2002, decode_1.loss_seg: 0.0660, decode_1.acc_seg: 93.3047, loss: 0.0953
2021-01-03 23:12:38,960 - mmseg - INFO - Iter [266850/280000]	lr: 7.313e-04, eta: 2:25:40, time: 0.681, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.2038, decode_1.loss_seg: 0.0658, decode_1.acc_seg: 93.3041, loss: 0.0948
2021-01-03 23:13:10,542 - mmseg - INFO - Iter [266900/280000]	lr: 7.292e-04, eta: 2:25:03, time: 0.632, data_time: 0.051, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.3580, decode_1.loss_seg: 0.0634, decode_1.acc_seg: 93.4539, loss: 0.0917
2021-01-03 23:13:44,882 - mmseg - INFO - Iter [266950/280000]	lr: 7.270e-04, eta: 2:24:32, time: 0.687, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 93.0849, decode_1.loss_seg: 0.0639, decode_1.acc_seg: 93.1794, loss: 0.0920
2021-01-03 23:14:18,991 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 23:14:18,991 - mmseg - INFO - Iter [267000/280000]	lr: 7.248e-04, eta: 2:24:01, time: 0.682, data_time: 0.104, memory: 7318, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 93.2673, decode_1.loss_seg: 0.0646, decode_1.acc_seg: 93.3708, loss: 0.0934
2021-01-03 23:14:53,237 - mmseg - INFO - Iter [267050/280000]	lr: 7.227e-04, eta: 2:23:29, time: 0.685, data_time: 0.105, memory: 7318, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 92.8810, decode_1.loss_seg: 0.0654, decode_1.acc_seg: 92.9749, loss: 0.0941
2021-01-03 23:15:24,908 - mmseg - INFO - Iter [267100/280000]	lr: 7.205e-04, eta: 2:22:53, time: 0.633, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.2522, decode_1.loss_seg: 0.0645, decode_1.acc_seg: 93.3469, loss: 0.0931
2021-01-03 23:15:59,181 - mmseg - INFO - Iter [267150/280000]	lr: 7.184e-04, eta: 2:22:22, time: 0.685, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0275, decode_0.acc_seg: 93.5410, decode_1.loss_seg: 0.0620, decode_1.acc_seg: 93.6430, loss: 0.0895
2021-01-03 23:16:33,303 - mmseg - INFO - Iter [267200/280000]	lr: 7.162e-04, eta: 2:21:50, time: 0.683, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.7496, decode_1.loss_seg: 0.0660, decode_1.acc_seg: 93.8538, loss: 0.0951
2021-01-03 23:17:04,914 - mmseg - INFO - Iter [267250/280000]	lr: 7.140e-04, eta: 2:21:14, time: 0.632, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.2825, decode_1.loss_seg: 0.0637, decode_1.acc_seg: 93.3765, loss: 0.0918
2021-01-03 23:17:39,379 - mmseg - INFO - Iter [267300/280000]	lr: 7.119e-04, eta: 2:20:43, time: 0.689, data_time: 0.095, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.4330, decode_1.loss_seg: 0.0641, decode_1.acc_seg: 93.5288, loss: 0.0924
2021-01-03 23:18:13,424 - mmseg - INFO - Iter [267350/280000]	lr: 7.097e-04, eta: 2:20:11, time: 0.681, data_time: 0.088, memory: 7318, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.3368, decode_1.loss_seg: 0.0656, decode_1.acc_seg: 93.4367, loss: 0.0947
2021-01-03 23:18:47,424 - mmseg - INFO - Iter [267400/280000]	lr: 7.075e-04, eta: 2:19:39, time: 0.680, data_time: 0.097, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 93.2486, decode_1.loss_seg: 0.0635, decode_1.acc_seg: 93.3455, loss: 0.0917
2021-01-03 23:19:19,100 - mmseg - INFO - Iter [267450/280000]	lr: 7.053e-04, eta: 2:19:03, time: 0.633, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 92.9746, decode_1.loss_seg: 0.0635, decode_1.acc_seg: 93.0717, loss: 0.0917
2021-01-03 23:19:53,362 - mmseg - INFO - Iter [267500/280000]	lr: 7.032e-04, eta: 2:18:32, time: 0.685, data_time: 0.095, memory: 7318, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 93.1075, decode_1.loss_seg: 0.0623, decode_1.acc_seg: 93.1947, loss: 0.0899
2021-01-03 23:20:27,502 - mmseg - INFO - Iter [267550/280000]	lr: 7.010e-04, eta: 2:18:00, time: 0.683, data_time: 0.104, memory: 7318, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.0311, decode_1.loss_seg: 0.0644, decode_1.acc_seg: 93.1305, loss: 0.0929
2021-01-03 23:21:01,641 - mmseg - INFO - Iter [267600/280000]	lr: 6.988e-04, eta: 2:17:28, time: 0.683, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0274, decode_0.acc_seg: 93.5602, decode_1.loss_seg: 0.0618, decode_1.acc_seg: 93.6518, loss: 0.0893
2021-01-03 23:21:33,344 - mmseg - INFO - Iter [267650/280000]	lr: 6.967e-04, eta: 2:16:52, time: 0.634, data_time: 0.051, memory: 7318, decode_0.loss_seg: 0.0288, decode_0.acc_seg: 92.8921, decode_1.loss_seg: 0.0645, decode_1.acc_seg: 93.0092, loss: 0.0933
2021-01-03 23:22:07,651 - mmseg - INFO - Iter [267700/280000]	lr: 6.945e-04, eta: 2:16:21, time: 0.686, data_time: 0.093, memory: 7318, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 93.2680, decode_1.loss_seg: 0.0648, decode_1.acc_seg: 93.3550, loss: 0.0935
2021-01-03 23:22:41,636 - mmseg - INFO - Iter [267750/280000]	lr: 6.923e-04, eta: 2:15:49, time: 0.680, data_time: 0.086, memory: 7318, decode_0.loss_seg: 0.0275, decode_0.acc_seg: 93.5954, decode_1.loss_seg: 0.0622, decode_1.acc_seg: 93.6897, loss: 0.0896
2021-01-03 23:23:13,069 - mmseg - INFO - Iter [267800/280000]	lr: 6.901e-04, eta: 2:15:12, time: 0.629, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0277, decode_0.acc_seg: 92.9560, decode_1.loss_seg: 0.0626, decode_1.acc_seg: 93.0484, loss: 0.0903
2021-01-03 23:23:47,287 - mmseg - INFO - Iter [267850/280000]	lr: 6.880e-04, eta: 2:14:41, time: 0.684, data_time: 0.088, memory: 7318, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.2777, decode_1.loss_seg: 0.0658, decode_1.acc_seg: 93.3736, loss: 0.0949
2021-01-03 23:24:21,380 - mmseg - INFO - Iter [267900/280000]	lr: 6.858e-04, eta: 2:14:09, time: 0.682, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0273, decode_0.acc_seg: 93.5515, decode_1.loss_seg: 0.0615, decode_1.acc_seg: 93.6510, loss: 0.0887
2021-01-03 23:24:55,332 - mmseg - INFO - Iter [267950/280000]	lr: 6.836e-04, eta: 2:13:36, time: 0.679, data_time: 0.104, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.0336, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 93.1341, loss: 0.0922
2021-01-03 23:25:26,915 - mmseg - INFO - Saving checkpoint at 268000 iterations
[                                                  ] 0/33, elapsed: 0s, ETA:[>                                 ] 1/33, 0.6 task/s, elapsed: 2s, ETA:    52s[>>                                ] 2/33, 1.2 task/s, elapsed: 2s, ETA:    25s[>>>                               ] 3/33, 1.9 task/s, elapsed: 2s, ETA:    16s[>>>>                              ] 4/33, 2.3 task/s, elapsed: 2s, ETA:    13s[>>>>>                             ] 5/33, 2.8 task/s, elapsed: 2s, ETA:    10s[>>>>>>                            ] 6/33, 3.4 task/s, elapsed: 2s, ETA:     8s[>>>>>>>                           ] 7/33, 3.7 task/s, elapsed: 2s, ETA:     7s[>>>>>>>>                          ] 8/33, 4.2 task/s, elapsed: 2s, ETA:     6s[>>>>>>>>>                         ] 9/33, 4.7 task/s, elapsed: 2s, ETA:     5s[>>>>>>>>>>                       ] 10/33, 4.9 task/s, elapsed: 2s, ETA:     5s[>>>>>>>>>>>                      ] 11/33, 5.4 task/s, elapsed: 2s, ETA:     4s[>>>>>>>>>>>>                     ] 12/33, 5.9 task/s, elapsed: 2s, ETA:     4s[>>>>>>>>>>>>>                    ] 13/33, 5.9 task/s, elapsed: 2s, ETA:     3s[>>>>>>>>>>>>>>                   ] 14/33, 6.4 task/s, elapsed: 2s, ETA:     3s[>>>>>>>>>>>>>>>                  ] 15/33, 6.8 task/s, elapsed: 2s, ETA:     3s[>>>>>>>>>>>>>>>>                 ] 16/33, 6.8 task/s, elapsed: 2s, ETA:     2s[>>>>>>>>>>>>>>>>>                ] 17/33, 7.3 task/s, elapsed: 2s, ETA:     2s[>>>>>>>>>>>>>>>>>>               ] 18/33, 7.7 task/s, elapsed: 2s, ETA:     2s[>>>>>>>>>>>>>>>>>>>              ] 19/33, 7.7 task/s, elapsed: 2s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>             ] 20/33, 8.1 task/s, elapsed: 2s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>            ] 21/33, 8.5 task/s, elapsed: 2s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>           ] 22/33, 8.4 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>          ] 23/33, 8.8 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>         ] 24/33, 9.1 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>        ] 25/33, 9.0 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>       ] 26/33, 9.4 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>      ] 27/33, 9.8 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>     ] 28/33, 9.6 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 29/33, 10.0 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 30/33, 10.3 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 31/33, 10.1 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 32/33, 10.5 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 33/33, 10.8 task/s, elapsed: 3s, ETA:     0s

2021-01-03 23:25:33,153 - mmseg - INFO - per class results:
2021-01-03 23:25:33,154 - mmseg - INFO - 
+---------------+-------+-------+
| Class         | IoU   | Acc   |
+---------------+-------+-------+
| road          | 99.39 | 99.7  |
| sidewalk      | 92.65 | 96.07 |
| building      | 93.73 | 96.87 |
| wall          | 60.69 | 69.12 |
| fence         | 53.41 | 61.74 |
| pole          | 65.54 | 76.11 |
| traffic light | 74.91 | 80.94 |
| traffic sign  | 83.11 | 87.08 |
| vegetation    | 93.97 | 97.54 |
| terrain       | 73.75 | 83.51 |
| sky           | 96.37 | 98.03 |
| person        | 77.79 | 86.94 |
| rider         | 67.03 | 80.93 |
| car           | 95.22 | 97.8  |
| truck         | 39.34 | 43.91 |
| bus           | 89.01 | 90.47 |
| train         | 0.0   | nan   |
| motorcycle    | 21.85 | 25.34 |
| bicycle       | 81.28 | 91.35 |
+---------------+-------+-------+
2021-01-03 23:25:33,154 - mmseg - INFO - Summary:
2021-01-03 23:25:33,154 - mmseg - INFO - 
+--------+-------+------+-------+
| Scope  | mIoU  | mAcc | aAcc  |
+--------+-------+------+-------+
| global | 71.53 | 81.3 | 97.32 |
+--------+-------+------+-------+
2021-01-03 23:25:33,179 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 23:25:33,179 - mmseg - INFO - Iter(val) [268000]	mIoU: 0.7153, mAcc: 0.8130, aAcc: 0.9732
2021-01-03 23:26:07,593 - mmseg - INFO - Iter [268050/280000]	lr: 6.792e-04, eta: 2:11:51, time: 0.809, data_time: 0.211, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.1079, decode_1.loss_seg: 0.0637, decode_1.acc_seg: 93.1985, loss: 0.0920
2021-01-03 23:26:41,485 - mmseg - INFO - Iter [268100/280000]	lr: 6.771e-04, eta: 2:11:19, time: 0.678, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 92.8105, decode_1.loss_seg: 0.0632, decode_1.acc_seg: 92.9139, loss: 0.0912
2021-01-03 23:27:15,462 - mmseg - INFO - Iter [268150/280000]	lr: 6.749e-04, eta: 2:10:47, time: 0.679, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.3200, decode_1.loss_seg: 0.0631, decode_1.acc_seg: 93.4220, loss: 0.0912
2021-01-03 23:27:47,039 - mmseg - INFO - Iter [268200/280000]	lr: 6.727e-04, eta: 2:10:12, time: 0.632, data_time: 0.042, memory: 7318, decode_0.loss_seg: 0.0278, decode_0.acc_seg: 92.8378, decode_1.loss_seg: 0.0629, decode_1.acc_seg: 92.9337, loss: 0.0907
2021-01-03 23:28:21,240 - mmseg - INFO - Iter [268250/280000]	lr: 6.705e-04, eta: 2:09:41, time: 0.684, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 93.2762, decode_1.loss_seg: 0.0650, decode_1.acc_seg: 93.3728, loss: 0.0939
2021-01-03 23:28:55,267 - mmseg - INFO - Iter [268300/280000]	lr: 6.683e-04, eta: 2:09:09, time: 0.681, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0289, decode_0.acc_seg: 92.8523, decode_1.loss_seg: 0.0651, decode_1.acc_seg: 92.9534, loss: 0.0940
2021-01-03 23:29:27,024 - mmseg - INFO - Iter [268350/280000]	lr: 6.661e-04, eta: 2:08:34, time: 0.635, data_time: 0.055, memory: 7318, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 93.3965, decode_1.loss_seg: 0.0633, decode_1.acc_seg: 93.4874, loss: 0.0913
2021-01-03 23:30:01,179 - mmseg - INFO - Iter [268400/280000]	lr: 6.639e-04, eta: 2:08:02, time: 0.683, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 92.9057, decode_1.loss_seg: 0.0644, decode_1.acc_seg: 93.0027, loss: 0.0928
2021-01-03 23:30:35,107 - mmseg - INFO - Iter [268450/280000]	lr: 6.618e-04, eta: 2:07:30, time: 0.678, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 93.0946, decode_1.loss_seg: 0.0640, decode_1.acc_seg: 93.1898, loss: 0.0923
2021-01-03 23:31:09,181 - mmseg - INFO - Iter [268500/280000]	lr: 6.596e-04, eta: 2:06:58, time: 0.681, data_time: 0.084, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.1740, decode_1.loss_seg: 0.0635, decode_1.acc_seg: 93.2652, loss: 0.0916
2021-01-03 23:31:40,821 - mmseg - INFO - Iter [268550/280000]	lr: 6.574e-04, eta: 2:06:23, time: 0.633, data_time: 0.055, memory: 7318, decode_0.loss_seg: 0.0278, decode_0.acc_seg: 92.8979, decode_1.loss_seg: 0.0627, decode_1.acc_seg: 92.9997, loss: 0.0905
2021-01-03 23:32:15,308 - mmseg - INFO - Iter [268600/280000]	lr: 6.552e-04, eta: 2:05:52, time: 0.690, data_time: 0.092, memory: 7318, decode_0.loss_seg: 0.0277, decode_0.acc_seg: 93.2304, decode_1.loss_seg: 0.0624, decode_1.acc_seg: 93.3294, loss: 0.0901
2021-01-03 23:32:49,487 - mmseg - INFO - Iter [268650/280000]	lr: 6.530e-04, eta: 2:05:20, time: 0.684, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 93.2722, decode_1.loss_seg: 0.0628, decode_1.acc_seg: 93.3749, loss: 0.0908
2021-01-03 23:33:21,060 - mmseg - INFO - Iter [268700/280000]	lr: 6.508e-04, eta: 2:04:45, time: 0.632, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 92.7510, decode_1.loss_seg: 0.0634, decode_1.acc_seg: 92.8501, loss: 0.0915
2021-01-03 23:33:55,249 - mmseg - INFO - Iter [268750/280000]	lr: 6.486e-04, eta: 2:04:13, time: 0.684, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0271, decode_0.acc_seg: 93.4185, decode_1.loss_seg: 0.0611, decode_1.acc_seg: 93.5133, loss: 0.0882
2021-01-03 23:34:29,368 - mmseg - INFO - Iter [268800/280000]	lr: 6.464e-04, eta: 2:03:41, time: 0.682, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 93.2134, decode_1.loss_seg: 0.0626, decode_1.acc_seg: 93.3037, loss: 0.0902
2021-01-03 23:35:03,360 - mmseg - INFO - Iter [268850/280000]	lr: 6.442e-04, eta: 2:03:09, time: 0.680, data_time: 0.089, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.4608, decode_1.loss_seg: 0.0635, decode_1.acc_seg: 93.5603, loss: 0.0916
2021-01-03 23:35:34,818 - mmseg - INFO - Iter [268900/280000]	lr: 6.420e-04, eta: 2:02:34, time: 0.629, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 92.9416, decode_1.loss_seg: 0.0635, decode_1.acc_seg: 93.0381, loss: 0.0917
2021-01-03 23:36:09,078 - mmseg - INFO - Iter [268950/280000]	lr: 6.398e-04, eta: 2:02:02, time: 0.685, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0277, decode_0.acc_seg: 93.1302, decode_1.loss_seg: 0.0625, decode_1.acc_seg: 93.2313, loss: 0.0902
2021-01-03 23:36:43,081 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 23:36:43,082 - mmseg - INFO - Iter [269000/280000]	lr: 6.376e-04, eta: 2:01:30, time: 0.680, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0277, decode_0.acc_seg: 93.0661, decode_1.loss_seg: 0.0627, decode_1.acc_seg: 93.1587, loss: 0.0904
2021-01-03 23:37:17,008 - mmseg - INFO - Iter [269050/280000]	lr: 6.354e-04, eta: 2:00:58, time: 0.678, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 93.2673, decode_1.loss_seg: 0.0630, decode_1.acc_seg: 93.3719, loss: 0.0912
2021-01-03 23:37:48,482 - mmseg - INFO - Iter [269100/280000]	lr: 6.332e-04, eta: 2:00:23, time: 0.630, data_time: 0.052, memory: 7318, decode_0.loss_seg: 0.0273, decode_0.acc_seg: 93.6716, decode_1.loss_seg: 0.0615, decode_1.acc_seg: 93.7637, loss: 0.0887
2021-01-03 23:38:22,628 - mmseg - INFO - Iter [269150/280000]	lr: 6.310e-04, eta: 1:59:51, time: 0.683, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 92.9531, decode_1.loss_seg: 0.0644, decode_1.acc_seg: 93.0535, loss: 0.0928
2021-01-03 23:38:56,478 - mmseg - INFO - Iter [269200/280000]	lr: 6.288e-04, eta: 1:59:19, time: 0.677, data_time: 0.093, memory: 7318, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 93.0608, decode_1.loss_seg: 0.0629, decode_1.acc_seg: 93.1573, loss: 0.0909
2021-01-03 23:39:27,812 - mmseg - INFO - Iter [269250/280000]	lr: 6.266e-04, eta: 1:58:43, time: 0.627, data_time: 0.040, memory: 7318, decode_0.loss_seg: 0.0279, decode_0.acc_seg: 92.9126, decode_1.loss_seg: 0.0627, decode_1.acc_seg: 93.0147, loss: 0.0906
2021-01-03 23:40:02,163 - mmseg - INFO - Iter [269300/280000]	lr: 6.244e-04, eta: 1:58:12, time: 0.687, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 92.9908, decode_1.loss_seg: 0.0629, decode_1.acc_seg: 93.0873, loss: 0.0908
2021-01-03 23:40:36,297 - mmseg - INFO - Iter [269350/280000]	lr: 6.222e-04, eta: 1:57:40, time: 0.683, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0286, decode_0.acc_seg: 93.2686, decode_1.loss_seg: 0.0644, decode_1.acc_seg: 93.3670, loss: 0.0930
2021-01-03 23:41:10,216 - mmseg - INFO - Iter [269400/280000]	lr: 6.200e-04, eta: 1:57:07, time: 0.678, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0272, decode_0.acc_seg: 92.6833, decode_1.loss_seg: 0.0616, decode_1.acc_seg: 92.7735, loss: 0.0888
2021-01-03 23:41:41,811 - mmseg - INFO - Iter [269450/280000]	lr: 6.178e-04, eta: 1:56:32, time: 0.632, data_time: 0.051, memory: 7318, decode_0.loss_seg: 0.0279, decode_0.acc_seg: 93.1672, decode_1.loss_seg: 0.0629, decode_1.acc_seg: 93.2665, loss: 0.0908
2021-01-03 23:42:16,048 - mmseg - INFO - Iter [269500/280000]	lr: 6.156e-04, eta: 1:56:01, time: 0.685, data_time: 0.104, memory: 7318, decode_0.loss_seg: 0.0285, decode_0.acc_seg: 93.3044, decode_1.loss_seg: 0.0638, decode_1.acc_seg: 93.4066, loss: 0.0923
2021-01-03 23:42:49,961 - mmseg - INFO - Iter [269550/280000]	lr: 6.134e-04, eta: 1:55:28, time: 0.678, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0291, decode_0.acc_seg: 93.0227, decode_1.loss_seg: 0.0657, decode_1.acc_seg: 93.1200, loss: 0.0948
2021-01-03 23:43:23,997 - mmseg - INFO - Iter [269600/280000]	lr: 6.112e-04, eta: 1:54:56, time: 0.681, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 93.1917, decode_1.loss_seg: 0.0636, decode_1.acc_seg: 93.3117, loss: 0.0920
2021-01-03 23:43:55,507 - mmseg - INFO - Iter [269650/280000]	lr: 6.090e-04, eta: 1:54:21, time: 0.630, data_time: 0.051, memory: 7318, decode_0.loss_seg: 0.0277, decode_0.acc_seg: 93.5817, decode_1.loss_seg: 0.0620, decode_1.acc_seg: 93.6845, loss: 0.0897
2021-01-03 23:44:29,563 - mmseg - INFO - Iter [269700/280000]	lr: 6.067e-04, eta: 1:53:49, time: 0.681, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0287, decode_0.acc_seg: 93.1984, decode_1.loss_seg: 0.0650, decode_1.acc_seg: 93.2946, loss: 0.0937
2021-01-03 23:45:03,807 - mmseg - INFO - Iter [269750/280000]	lr: 6.045e-04, eta: 1:53:17, time: 0.685, data_time: 0.089, memory: 7318, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 93.0382, decode_1.loss_seg: 0.0622, decode_1.acc_seg: 93.1337, loss: 0.0898
2021-01-03 23:45:35,246 - mmseg - INFO - Iter [269800/280000]	lr: 6.023e-04, eta: 1:52:42, time: 0.629, data_time: 0.047, memory: 7318, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 93.5799, decode_1.loss_seg: 0.0626, decode_1.acc_seg: 93.6722, loss: 0.0902
2021-01-03 23:46:09,436 - mmseg - INFO - Iter [269850/280000]	lr: 6.001e-04, eta: 1:52:10, time: 0.684, data_time: 0.094, memory: 7318, decode_0.loss_seg: 0.0282, decode_0.acc_seg: 93.2869, decode_1.loss_seg: 0.0636, decode_1.acc_seg: 93.3883, loss: 0.0918
2021-01-03 23:46:43,570 - mmseg - INFO - Iter [269900/280000]	lr: 5.979e-04, eta: 1:51:38, time: 0.683, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0275, decode_0.acc_seg: 93.5178, decode_1.loss_seg: 0.0618, decode_1.acc_seg: 93.6156, loss: 0.0893
2021-01-03 23:47:17,582 - mmseg - INFO - Iter [269950/280000]	lr: 5.957e-04, eta: 1:51:05, time: 0.680, data_time: 0.091, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.2121, decode_1.loss_seg: 0.0633, decode_1.acc_seg: 93.3064, loss: 0.0915
2021-01-03 23:47:49,213 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 23:47:49,213 - mmseg - INFO - Iter [270000/280000]	lr: 5.934e-04, eta: 1:50:31, time: 0.633, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0274, decode_0.acc_seg: 93.2871, decode_1.loss_seg: 0.0617, decode_1.acc_seg: 93.3855, loss: 0.0891
2021-01-03 23:48:23,442 - mmseg - INFO - Iter [270050/280000]	lr: 5.912e-04, eta: 1:49:59, time: 0.684, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0272, decode_0.acc_seg: 93.0861, decode_1.loss_seg: 0.0615, decode_1.acc_seg: 93.1832, loss: 0.0887
2021-01-03 23:48:57,399 - mmseg - INFO - Iter [270100/280000]	lr: 5.890e-04, eta: 1:49:26, time: 0.679, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0279, decode_0.acc_seg: 93.0689, decode_1.loss_seg: 0.0626, decode_1.acc_seg: 93.1682, loss: 0.0904
2021-01-03 23:49:28,898 - mmseg - INFO - Iter [270150/280000]	lr: 5.868e-04, eta: 1:48:52, time: 0.630, data_time: 0.042, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 92.9762, decode_1.loss_seg: 0.0641, decode_1.acc_seg: 93.0752, loss: 0.0924
2021-01-03 23:50:03,250 - mmseg - INFO - Iter [270200/280000]	lr: 5.845e-04, eta: 1:48:19, time: 0.687, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 93.5523, decode_1.loss_seg: 0.0625, decode_1.acc_seg: 93.6413, loss: 0.0901
2021-01-03 23:50:37,224 - mmseg - INFO - Iter [270250/280000]	lr: 5.823e-04, eta: 1:47:47, time: 0.679, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0270, decode_0.acc_seg: 93.1736, decode_1.loss_seg: 0.0604, decode_1.acc_seg: 93.2698, loss: 0.0874
2021-01-03 23:51:11,341 - mmseg - INFO - Iter [270300/280000]	lr: 5.801e-04, eta: 1:47:15, time: 0.682, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0273, decode_0.acc_seg: 93.2898, decode_1.loss_seg: 0.0613, decode_1.acc_seg: 93.3888, loss: 0.0886
2021-01-03 23:51:42,936 - mmseg - INFO - Iter [270350/280000]	lr: 5.779e-04, eta: 1:46:40, time: 0.632, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0272, decode_0.acc_seg: 93.1588, decode_1.loss_seg: 0.0616, decode_1.acc_seg: 93.2509, loss: 0.0888
2021-01-03 23:52:17,298 - mmseg - INFO - Iter [270400/280000]	lr: 5.756e-04, eta: 1:46:08, time: 0.687, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0274, decode_0.acc_seg: 93.2839, decode_1.loss_seg: 0.0618, decode_1.acc_seg: 93.3797, loss: 0.0893
2021-01-03 23:52:51,343 - mmseg - INFO - Iter [270450/280000]	lr: 5.734e-04, eta: 1:45:36, time: 0.681, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0270, decode_0.acc_seg: 93.6015, decode_1.loss_seg: 0.0609, decode_1.acc_seg: 93.6985, loss: 0.0879
2021-01-03 23:53:25,426 - mmseg - INFO - Iter [270500/280000]	lr: 5.712e-04, eta: 1:45:03, time: 0.682, data_time: 0.090, memory: 7318, decode_0.loss_seg: 0.0278, decode_0.acc_seg: 93.1316, decode_1.loss_seg: 0.0626, decode_1.acc_seg: 93.2318, loss: 0.0905
2021-01-03 23:53:57,210 - mmseg - INFO - Iter [270550/280000]	lr: 5.689e-04, eta: 1:44:29, time: 0.636, data_time: 0.050, memory: 7318, decode_0.loss_seg: 0.0275, decode_0.acc_seg: 93.4864, decode_1.loss_seg: 0.0619, decode_1.acc_seg: 93.5838, loss: 0.0894
2021-01-03 23:54:31,513 - mmseg - INFO - Iter [270600/280000]	lr: 5.667e-04, eta: 1:43:57, time: 0.686, data_time: 0.087, memory: 7318, decode_0.loss_seg: 0.0272, decode_0.acc_seg: 93.4993, decode_1.loss_seg: 0.0615, decode_1.acc_seg: 93.5907, loss: 0.0887
2021-01-03 23:55:05,547 - mmseg - INFO - Iter [270650/280000]	lr: 5.645e-04, eta: 1:43:24, time: 0.681, data_time: 0.093, memory: 7318, decode_0.loss_seg: 0.0277, decode_0.acc_seg: 92.7364, decode_1.loss_seg: 0.0623, decode_1.acc_seg: 92.8419, loss: 0.0900
2021-01-03 23:55:37,078 - mmseg - INFO - Iter [270700/280000]	lr: 5.622e-04, eta: 1:42:50, time: 0.631, data_time: 0.055, memory: 7318, decode_0.loss_seg: 0.0274, decode_0.acc_seg: 93.3355, decode_1.loss_seg: 0.0616, decode_1.acc_seg: 93.4362, loss: 0.0890
2021-01-03 23:56:11,514 - mmseg - INFO - Iter [270750/280000]	lr: 5.600e-04, eta: 1:42:18, time: 0.689, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0266, decode_0.acc_seg: 93.3119, decode_1.loss_seg: 0.0599, decode_1.acc_seg: 93.4057, loss: 0.0865
2021-01-03 23:56:45,537 - mmseg - INFO - Iter [270800/280000]	lr: 5.578e-04, eta: 1:41:45, time: 0.680, data_time: 0.099, memory: 7318, decode_0.loss_seg: 0.0283, decode_0.acc_seg: 92.8941, decode_1.loss_seg: 0.0639, decode_1.acc_seg: 92.9933, loss: 0.0922
2021-01-03 23:57:19,704 - mmseg - INFO - Iter [270850/280000]	lr: 5.555e-04, eta: 1:41:13, time: 0.683, data_time: 0.086, memory: 7318, decode_0.loss_seg: 0.0269, decode_0.acc_seg: 92.8829, decode_1.loss_seg: 0.0610, decode_1.acc_seg: 92.9677, loss: 0.0879
2021-01-03 23:57:51,169 - mmseg - INFO - Iter [270900/280000]	lr: 5.533e-04, eta: 1:40:38, time: 0.629, data_time: 0.052, memory: 7318, decode_0.loss_seg: 0.0279, decode_0.acc_seg: 93.4809, decode_1.loss_seg: 0.0627, decode_1.acc_seg: 93.5825, loss: 0.0906
2021-01-03 23:58:25,529 - mmseg - INFO - Iter [270950/280000]	lr: 5.510e-04, eta: 1:40:06, time: 0.687, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0269, decode_0.acc_seg: 93.1707, decode_1.loss_seg: 0.0606, decode_1.acc_seg: 93.2559, loss: 0.0875
2021-01-03 23:58:59,522 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-03 23:58:59,522 - mmseg - INFO - Iter [271000/280000]	lr: 5.488e-04, eta: 1:39:34, time: 0.680, data_time: 0.102, memory: 7318, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 92.9573, decode_1.loss_seg: 0.0616, decode_1.acc_seg: 93.0579, loss: 0.0892
2021-01-03 23:59:33,630 - mmseg - INFO - Iter [271050/280000]	lr: 5.466e-04, eta: 1:39:01, time: 0.682, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0274, decode_0.acc_seg: 93.2486, decode_1.loss_seg: 0.0621, decode_1.acc_seg: 93.3396, loss: 0.0894
2021-01-04 00:00:05,439 - mmseg - INFO - Iter [271100/280000]	lr: 5.443e-04, eta: 1:38:27, time: 0.636, data_time: 0.055, memory: 7318, decode_0.loss_seg: 0.0269, decode_0.acc_seg: 93.5705, decode_1.loss_seg: 0.0606, decode_1.acc_seg: 93.6651, loss: 0.0875
2021-01-04 00:00:39,631 - mmseg - INFO - Iter [271150/280000]	lr: 5.421e-04, eta: 1:37:54, time: 0.684, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0274, decode_0.acc_seg: 93.1617, decode_1.loss_seg: 0.0622, decode_1.acc_seg: 93.2425, loss: 0.0897
2021-01-04 00:01:13,631 - mmseg - INFO - Iter [271200/280000]	lr: 5.398e-04, eta: 1:37:22, time: 0.680, data_time: 0.080, memory: 7318, decode_0.loss_seg: 0.0268, decode_0.acc_seg: 93.5240, decode_1.loss_seg: 0.0603, decode_1.acc_seg: 93.6183, loss: 0.0871
2021-01-04 00:01:45,262 - mmseg - INFO - Iter [271250/280000]	lr: 5.376e-04, eta: 1:36:47, time: 0.633, data_time: 0.054, memory: 7318, decode_0.loss_seg: 0.0281, decode_0.acc_seg: 93.5382, decode_1.loss_seg: 0.0628, decode_1.acc_seg: 93.6357, loss: 0.0909
2021-01-04 00:02:19,672 - mmseg - INFO - Iter [271300/280000]	lr: 5.353e-04, eta: 1:36:15, time: 0.688, data_time: 0.089, memory: 7318, decode_0.loss_seg: 0.0269, decode_0.acc_seg: 93.4322, decode_1.loss_seg: 0.0605, decode_1.acc_seg: 93.5276, loss: 0.0874
2021-01-04 00:02:53,525 - mmseg - INFO - Iter [271350/280000]	lr: 5.331e-04, eta: 1:35:42, time: 0.677, data_time: 0.090, memory: 7318, decode_0.loss_seg: 0.0266, decode_0.acc_seg: 92.8952, decode_1.loss_seg: 0.0598, decode_1.acc_seg: 92.9917, loss: 0.0864
2021-01-04 00:03:27,641 - mmseg - INFO - Iter [271400/280000]	lr: 5.308e-04, eta: 1:35:10, time: 0.682, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0275, decode_0.acc_seg: 93.3249, decode_1.loss_seg: 0.0621, decode_1.acc_seg: 93.4245, loss: 0.0897
2021-01-04 00:03:59,113 - mmseg - INFO - Iter [271450/280000]	lr: 5.286e-04, eta: 1:34:35, time: 0.630, data_time: 0.050, memory: 7318, decode_0.loss_seg: 0.0278, decode_0.acc_seg: 92.9887, decode_1.loss_seg: 0.0627, decode_1.acc_seg: 93.0870, loss: 0.0905
2021-01-04 00:04:33,222 - mmseg - INFO - Iter [271500/280000]	lr: 5.263e-04, eta: 1:34:03, time: 0.682, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0284, decode_0.acc_seg: 92.9658, decode_1.loss_seg: 0.0641, decode_1.acc_seg: 93.0707, loss: 0.0925
2021-01-04 00:05:07,274 - mmseg - INFO - Iter [271550/280000]	lr: 5.240e-04, eta: 1:33:30, time: 0.681, data_time: 0.100, memory: 7318, decode_0.loss_seg: 0.0266, decode_0.acc_seg: 93.4303, decode_1.loss_seg: 0.0599, decode_1.acc_seg: 93.5297, loss: 0.0864
2021-01-04 00:05:38,914 - mmseg - INFO - Iter [271600/280000]	lr: 5.218e-04, eta: 1:32:56, time: 0.633, data_time: 0.053, memory: 7318, decode_0.loss_seg: 0.0268, decode_0.acc_seg: 93.1668, decode_1.loss_seg: 0.0605, decode_1.acc_seg: 93.2632, loss: 0.0873
2021-01-04 00:06:13,282 - mmseg - INFO - Iter [271650/280000]	lr: 5.195e-04, eta: 1:32:24, time: 0.687, data_time: 0.101, memory: 7318, decode_0.loss_seg: 0.0280, decode_0.acc_seg: 93.6823, decode_1.loss_seg: 0.0629, decode_1.acc_seg: 93.7848, loss: 0.0909
2021-01-04 00:06:47,380 - mmseg - INFO - Iter [271700/280000]	lr: 5.173e-04, eta: 1:31:51, time: 0.682, data_time: 0.103, memory: 7318, decode_0.loss_seg: 0.0271, decode_0.acc_seg: 92.8704, decode_1.loss_seg: 0.0608, decode_1.acc_seg: 92.9697, loss: 0.0879
2021-01-04 00:07:21,490 - mmseg - INFO - Iter [271750/280000]	lr: 5.150e-04, eta: 1:31:19, time: 0.682, data_time: 0.089, memory: 7318, decode_0.loss_seg: 0.0276, decode_0.acc_seg: 93.3902, decode_1.loss_seg: 0.0623, decode_1.acc_seg: 93.4884, loss: 0.0899
2021-01-04 00:07:53,188 - mmseg - INFO - Iter [271800/280000]	lr: 5.127e-04, eta: 1:30:44, time: 0.634, data_time: 0.048, memory: 7318, decode_0.loss_seg: 0.0273, decode_0.acc_seg: 92.4896, decode_1.loss_seg: 0.0618, decode_1.acc_seg: 92.5847, loss: 0.0891
2021-01-04 00:08:27,560 - mmseg - INFO - Iter [271850/280000]	lr: 5.105e-04, eta: 1:30:12, time: 0.687, data_time: 0.097, memory: 7318, decode_0.loss_seg: 0.0264, decode_0.acc_seg: 93.5711, decode_1.loss_seg: 0.0593, decode_1.acc_seg: 93.6634, loss: 0.0857
2021-01-04 00:09:01,665 - mmseg - INFO - Iter [271900/280000]	lr: 5.082e-04, eta: 1:29:39, time: 0.682, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0270, decode_0.acc_seg: 92.8018, decode_1.loss_seg: 0.0606, decode_1.acc_seg: 92.8934, loss: 0.0876
2021-01-04 00:09:35,794 - mmseg - INFO - Iter [271950/280000]	lr: 5.059e-04, eta: 1:29:07, time: 0.683, data_time: 0.096, memory: 7318, decode_0.loss_seg: 0.0274, decode_0.acc_seg: 93.4031, decode_1.loss_seg: 0.0618, decode_1.acc_seg: 93.5005, loss: 0.0892
2021-01-04 00:10:07,459 - mmseg - INFO - Saving checkpoint at 272000 iterations
[                                                  ] 0/33, elapsed: 0s, ETA:[>                                 ] 1/33, 0.6 task/s, elapsed: 2s, ETA:    53s[>>                                ] 2/33, 1.2 task/s, elapsed: 2s, ETA:    26s[>>>                               ] 3/33, 1.8 task/s, elapsed: 2s, ETA:    17s[>>>>                              ] 4/33, 2.2 task/s, elapsed: 2s, ETA:    13s[>>>>>                             ] 5/33, 2.8 task/s, elapsed: 2s, ETA:    10s[>>>>>>                            ] 6/33, 3.3 task/s, elapsed: 2s, ETA:     8s[>>>>>>>                           ] 7/33, 3.6 task/s, elapsed: 2s, ETA:     7s[>>>>>>>>                          ] 8/33, 4.1 task/s, elapsed: 2s, ETA:     6s[>>>>>>>>>                         ] 9/33, 4.6 task/s, elapsed: 2s, ETA:     5s[>>>>>>>>>>                       ] 10/33, 4.8 task/s, elapsed: 2s, ETA:     5s[>>>>>>>>>>>                      ] 11/33, 5.3 task/s, elapsed: 2s, ETA:     4s[>>>>>>>>>>>>                     ] 12/33, 5.8 task/s, elapsed: 2s, ETA:     4s[>>>>>>>>>>>>>                    ] 13/33, 5.8 task/s, elapsed: 2s, ETA:     3s[>>>>>>>>>>>>>>                   ] 14/33, 6.3 task/s, elapsed: 2s, ETA:     3s[>>>>>>>>>>>>>>>                  ] 15/33, 6.7 task/s, elapsed: 2s, ETA:     3s[>>>>>>>>>>>>>>>>                 ] 16/33, 6.7 task/s, elapsed: 2s, ETA:     3s[>>>>>>>>>>>>>>>>>                ] 17/33, 7.2 task/s, elapsed: 2s, ETA:     2s[>>>>>>>>>>>>>>>>>>               ] 18/33, 7.6 task/s, elapsed: 2s, ETA:     2s[>>>>>>>>>>>>>>>>>>>              ] 19/33, 7.5 task/s, elapsed: 3s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>             ] 20/33, 7.9 task/s, elapsed: 3s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>            ] 21/33, 8.3 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>           ] 22/33, 8.3 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>          ] 23/33, 8.6 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>         ] 24/33, 9.0 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>        ] 25/33, 8.9 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>       ] 26/33, 9.3 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>      ] 27/33, 9.6 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>     ] 28/33, 9.5 task/s, elapsed: 3s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>    ] 29/33, 9.8 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 30/33, 10.2 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 31/33, 10.0 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 32/33, 10.3 task/s, elapsed: 3s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 33/33, 10.7 task/s, elapsed: 3s, ETA:     0s

2021-01-04 00:10:13,735 - mmseg - INFO - per class results:
2021-01-04 00:10:13,736 - mmseg - INFO - 
+---------------+-------+-------+
| Class         | IoU   | Acc   |
+---------------+-------+-------+
| road          | 99.38 | 99.69 |
| sidewalk      | 92.45 | 96.19 |
| building      | 93.76 | 97.11 |
| wall          | 63.97 | 75.09 |
| fence         | 57.89 | 69.02 |
| pole          | 65.14 | 75.22 |
| traffic light | 74.54 | 81.12 |
| traffic sign  | 82.39 | 86.6  |
| vegetation    | 93.9  | 97.25 |
| terrain       | 73.91 | 82.15 |
| sky           | 96.29 | 97.84 |
| person        | 77.17 | 87.33 |
| rider         | 66.85 | 81.26 |
| car           | 95.47 | 97.86 |
| truck         | 48.38 | 51.86 |
| bus           | 92.85 | 94.77 |
| train         | nan   | nan   |
| motorcycle    | 38.54 | 44.67 |
| bicycle       | 82.14 | 90.83 |
+---------------+-------+-------+
2021-01-04 00:10:13,736 - mmseg - INFO - Summary:
2021-01-04 00:10:13,736 - mmseg - INFO - 
+--------+------+-------+-------+
| Scope  | mIoU | mAcc  | aAcc  |
+--------+------+-------+-------+
| global | 77.5 | 83.66 | 97.35 |
+--------+------+-------+-------+
2021-01-04 00:10:13,760 - mmseg - INFO - Exp name: ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py
2021-01-04 00:10:13,760 - mmseg - INFO - Iter(val) [272000]	mIoU: 0.7750, mAcc: 0.8366, aAcc: 0.9735
2021-01-04 00:10:47,935 - mmseg - INFO - Iter [272050/280000]	lr: 5.014e-04, eta: 1:27:43, time: 0.805, data_time: 0.215, memory: 7318, decode_0.loss_seg: 0.0269, decode_0.acc_seg: 93.1733, decode_1.loss_seg: 0.0607, decode_1.acc_seg: 93.2659, loss: 0.0876
2021-01-04 00:11:22,668 - mmseg - INFO - Iter [272100/280000]	lr: 4.991e-04, eta: 1:27:11, time: 0.695, data_time: 0.098, memory: 7318, decode_0.loss_seg: 0.0278, decode_0.acc_seg: 93.1758, decode_1.loss_seg: 0.0624, decode_1.acc_seg: 93.2709, loss: 0.0902
2021-01-04 00:11:54,242 - mmseg - INFO - Iter [272150/280000]	lr: 4.968e-04, eta: 1:26:37, time: 0.631, data_time: 0.055, memory: 7318, decode_0.loss_seg: 0.0265, decode_0.acc_seg: 93.8514, decode_1.loss_seg: 0.0602, decode_1.acc_seg: 93.9396, loss: 0.0867
Traceback (most recent call last):
  File "/home/gandi/miniconda3/envs/mmcv/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/gandi/miniconda3/envs/mmcv/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/gandi/miniconda3/envs/mmcv/lib/python3.7/site-packages/torch/distributed/launch.py", line 261, in <module>
    main()
  File "/home/gandi/miniconda3/envs/mmcv/lib/python3.7/site-packages/torch/distributed/launch.py", line 257, in main
    cmd=cmd)
subprocess.CalledProcessError: Command '['/home/gandi/miniconda3/envs/mmcv/bin/python', '-u', './tools/train.py', '--local_rank=2', 'configs/ocrnet/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft.py', '--launcher', 'pytorch', '--resume-from', 'work_dirs/ocrnet_hr18_512x1024_280k_cityscapes_rain_ft/iter_260000.pth']' died with <Signals.SIGTERM: 15>.
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
/home/gandi/miniconda3/envs/mmcv/lib/python3.7/multiprocessing/semaphore_tracker.py:144: UserWarning: semaphore_tracker: There appear to be 23 leaked semaphores to clean up at shutdown
  len(cache))
/home/gandi/miniconda3/envs/mmcv/lib/python3.7/multiprocessing/semaphore_tracker.py:144: UserWarning: semaphore_tracker: There appear to be 23 leaked semaphores to clean up at shutdown
  len(cache))
/home/gandi/miniconda3/envs/mmcv/lib/python3.7/multiprocessing/semaphore_tracker.py:144: UserWarning: semaphore_tracker: There appear to be 23 leaked semaphores to clean up at shutdown
  len(cache))
